/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.formance.formance_sdk.utils.DateTimeDeserializer;
import com.formance.formance_sdk.utils.DateTimeSerializer;
import java.time.OffsetDateTime;


public class Reconciliation {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public Reconciliation withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("driftBalances")
    public java.util.Map<String, Long> driftBalances;

    public Reconciliation withDriftBalances(java.util.Map<String, Long> driftBalances) {
        this.driftBalances = driftBalances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;

    public Reconciliation withError(String error) {
        this.error = error;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public Reconciliation withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("ledgerBalances")
    public java.util.Map<String, Long> ledgerBalances;

    public Reconciliation withLedgerBalances(java.util.Map<String, Long> ledgerBalances) {
        this.ledgerBalances = ledgerBalances;
        return this;
    }
    
    @JsonProperty("paymentsBalances")
    public java.util.Map<String, Long> paymentsBalances;

    public Reconciliation withPaymentsBalances(java.util.Map<String, Long> paymentsBalances) {
        this.paymentsBalances = paymentsBalances;
        return this;
    }
    
    @JsonProperty("policyID")
    public String policyID;

    public Reconciliation withPolicyID(String policyID) {
        this.policyID = policyID;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("reconciledAtLedger")
    public OffsetDateTime reconciledAtLedger;

    public Reconciliation withReconciledAtLedger(OffsetDateTime reconciledAtLedger) {
        this.reconciledAtLedger = reconciledAtLedger;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("reconciledAtPayments")
    public OffsetDateTime reconciledAtPayments;

    public Reconciliation withReconciledAtPayments(OffsetDateTime reconciledAtPayments) {
        this.reconciledAtPayments = reconciledAtPayments;
        return this;
    }
    
    @JsonProperty("status")
    public String status;

    public Reconciliation withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public Reconciliation(@JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("driftBalances") java.util.Map<String, Long> driftBalances, @JsonProperty("id") String id, @JsonProperty("ledgerBalances") java.util.Map<String, Long> ledgerBalances, @JsonProperty("paymentsBalances") java.util.Map<String, Long> paymentsBalances, @JsonProperty("policyID") String policyID, @JsonProperty("reconciledAtLedger") OffsetDateTime reconciledAtLedger, @JsonProperty("reconciledAtPayments") OffsetDateTime reconciledAtPayments, @JsonProperty("status") String status) {
        this.createdAt = createdAt;
        this.driftBalances = driftBalances;
        this.id = id;
        this.ledgerBalances = ledgerBalances;
        this.paymentsBalances = paymentsBalances;
        this.policyID = policyID;
        this.reconciledAtLedger = reconciledAtLedger;
        this.reconciledAtPayments = reconciledAtPayments;
        this.status = status;
  }
}

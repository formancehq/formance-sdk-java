overlay: 1.0.0
info:
  title: CodeSamples overlay for java target
  version: 0.0.0
actions:
  - target: $["paths"]["/api/auth/.well-known/openid-configuration"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getOIDCWellKnowns"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetOIDCWellKnownsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetOIDCWellKnownsResponse res = sdk.getOIDCWellKnowns()\n                .call();\n\n            // handle response\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/clients"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listClients"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListClientsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListClientsResponse res = sdk.auth().listClients()\n                .call();\n\n            if (res.listClientsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/clients"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createClient"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateClientResponse;\nimport com.formance.formance_sdk.models.shared.CreateClientRequest;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreateClientRequest req = CreateClientRequest.builder()\n                .name(\"<value>\")\n                .build();\n\n            CreateClientResponse res = sdk.auth().createClient()\n                .request(req)\n                .call();\n\n            if (res.createClientResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/clients/{clientId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deleteClient"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeleteClientRequest;\nimport com.formance.formance_sdk.models.operations.DeleteClientResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeleteClientRequest req = DeleteClientRequest.builder()\n                .clientId(\"<value>\")\n                .build();\n\n            DeleteClientResponse res = sdk.auth().deleteClient()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/clients/{clientId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "readClient"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReadClientRequest;\nimport com.formance.formance_sdk.models.operations.ReadClientResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReadClientRequest req = ReadClientRequest.builder()\n                .clientId(\"<value>\")\n                .build();\n\n            ReadClientResponse res = sdk.auth().readClient()\n                .request(req)\n                .call();\n\n            if (res.readClientResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/clients/{clientId}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "updateClient"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UpdateClientRequest;\nimport com.formance.formance_sdk.models.operations.UpdateClientResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UpdateClientRequest req = UpdateClientRequest.builder()\n                .clientId(\"<value>\")\n                .build();\n\n            UpdateClientResponse res = sdk.auth().updateClient()\n                .request(req)\n                .call();\n\n            if (res.updateClientResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/clients/{clientId}/secrets"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createSecret"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateSecretRequest;\nimport com.formance.formance_sdk.models.operations.CreateSecretResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreateSecretRequest req = CreateSecretRequest.builder()\n                .clientId(\"<value>\")\n                .build();\n\n            CreateSecretResponse res = sdk.auth().createSecret()\n                .request(req)\n                .call();\n\n            if (res.createSecretResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/clients/{clientId}/secrets/{secretId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deleteSecret"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeleteSecretRequest;\nimport com.formance.formance_sdk.models.operations.DeleteSecretResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeleteSecretRequest req = DeleteSecretRequest.builder()\n                .clientId(\"<value>\")\n                .secretId(\"<value>\")\n                .build();\n\n            DeleteSecretResponse res = sdk.auth().deleteSecret()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/users"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listUsers"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListUsersResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListUsersResponse res = sdk.auth().listUsers()\n                .call();\n\n            if (res.listUsersResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/auth/users/{userId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "readUser"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReadUserRequest;\nimport com.formance.formance_sdk.models.operations.ReadUserResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReadUserRequest req = ReadUserRequest.builder()\n                .userId(\"<value>\")\n                .build();\n\n            ReadUserResponse res = sdk.auth().readUser()\n                .request(req)\n                .call();\n\n            if (res.readUserResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetInfoResponse res = sdk.ledger().getInfo()\n                .call();\n\n            if (res.configInfoResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListLedgers"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListLedgersRequest;\nimport com.formance.formance_sdk.models.operations.V2ListLedgersResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListLedgersRequest req = V2ListLedgersRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            V2ListLedgersResponse res = sdk.ledger().v2ListLedgers()\n                .request(req)\n                .call();\n\n            if (res.v2LedgerListResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetInfoResponse res = sdk.ledger().v2GetInfo()\n                .call();\n\n            if (res.v2ConfigInfoResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetLedger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetLedgerRequest;\nimport com.formance.formance_sdk.models.operations.V2GetLedgerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetLedgerRequest req = V2GetLedgerRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            V2GetLedgerResponse res = sdk.ledger().v2GetLedger()\n                .request(req)\n                .call();\n\n            if (res.v2GetLedgerResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CreateLedger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CreateLedgerRequest;\nimport com.formance.formance_sdk.models.operations.V2CreateLedgerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2CreateLedgerRequest req = V2CreateLedgerRequest.builder()\n                .ledger(\"ledger001\")\n                .v2CreateLedgerRequest(com.formance.formance_sdk.models.shared.V2CreateLedgerRequest.builder()\n                    .metadata(Map.ofEntries(\n                        Map.entry(\"admin\", \"true\")))\n                    .build())\n                .build();\n\n            V2CreateLedgerResponse res = sdk.ledger().v2CreateLedger()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/_bulk"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CreateBulk"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CreateBulkRequest;\nimport com.formance.formance_sdk.models.operations.V2CreateBulkResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2CreateBulkRequest req = V2CreateBulkRequest.builder()\n                .ledger(\"ledger001\")\n                .requestBody(List.of(\n                ))\n                .build();\n\n            V2CreateBulkResponse res = sdk.ledger().v2CreateBulk()\n                .request(req)\n                .call();\n\n            if (res.v2BulkResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetLedgerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetLedgerInfoRequest;\nimport com.formance.formance_sdk.models.operations.V2GetLedgerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetLedgerInfoRequest req = V2GetLedgerInfoRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            V2GetLedgerInfoResponse res = sdk.ledger().v2GetLedgerInfo()\n                .request(req)\n                .call();\n\n            if (res.v2LedgerInfoResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/accounts"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListAccounts"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListAccountsRequest;\nimport com.formance.formance_sdk.models.operations.V2ListAccountsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListAccountsRequest req = V2ListAccountsRequest.builder()\n                .ledger(\"ledger001\")\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            V2ListAccountsResponse res = sdk.ledger().v2ListAccounts()\n                .request(req)\n                .call();\n\n            if (res.v2AccountsCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/accounts"]["head"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CountAccounts"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CountAccountsRequest;\nimport com.formance.formance_sdk.models.operations.V2CountAccountsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2CountAccountsRequest req = V2CountAccountsRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            V2CountAccountsResponse res = sdk.ledger().v2CountAccounts()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/accounts/{address}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetAccountRequest;\nimport com.formance.formance_sdk.models.operations.V2GetAccountResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetAccountRequest req = V2GetAccountRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"users:001\")\n                .build();\n\n            V2GetAccountResponse res = sdk.ledger().v2GetAccount()\n                .request(req)\n                .call();\n\n            if (res.v2AccountResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/accounts/{address}/metadata"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2AddMetadataToAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2AddMetadataToAccountRequest;\nimport com.formance.formance_sdk.models.operations.V2AddMetadataToAccountResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2AddMetadataToAccountRequest req = V2AddMetadataToAccountRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"users:001\")\n                .requestBody(Map.ofEntries(\n                    Map.entry(\"admin\", \"true\")))\n                .dryRun(true)\n                .build();\n\n            V2AddMetadataToAccountResponse res = sdk.ledger().v2AddMetadataToAccount()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/accounts/{address}/metadata/{key}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2DeleteAccountMetadata"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2DeleteAccountMetadataRequest;\nimport com.formance.formance_sdk.models.operations.V2DeleteAccountMetadataResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2DeleteAccountMetadataRequest req = V2DeleteAccountMetadataRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"3680 Emile Grove\")\n                .key(\"foo\")\n                .build();\n\n            V2DeleteAccountMetadataResponse res = sdk.ledger().v2DeleteAccountMetadata()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/aggregate/balances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetBalancesAggregated"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetBalancesAggregatedRequest;\nimport com.formance.formance_sdk.models.operations.V2GetBalancesAggregatedResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetBalancesAggregatedRequest req = V2GetBalancesAggregatedRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            V2GetBalancesAggregatedResponse res = sdk.ledger().v2GetBalancesAggregated()\n                .request(req)\n                .call();\n\n            if (res.v2AggregateBalancesResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/logs"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListLogs"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListLogsRequest;\nimport com.formance.formance_sdk.models.operations.V2ListLogsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListLogsRequest req = V2ListLogsRequest.builder()\n                .ledger(\"ledger001\")\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            V2ListLogsResponse res = sdk.ledger().v2ListLogs()\n                .request(req)\n                .call();\n\n            if (res.v2LogsCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/metadata"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2UpdateLedgerMetadata"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2UpdateLedgerMetadataRequest;\nimport com.formance.formance_sdk.models.operations.V2UpdateLedgerMetadataResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2UpdateLedgerMetadataRequest req = V2UpdateLedgerMetadataRequest.builder()\n                .ledger(\"ledger001\")\n                .requestBody(Map.ofEntries(\n                    Map.entry(\"admin\", \"true\")))\n                .build();\n\n            V2UpdateLedgerMetadataResponse res = sdk.ledger().v2UpdateLedgerMetadata()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/metadata/{key}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2DeleteLedgerMetadata"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2DeleteLedgerMetadataRequest;\nimport com.formance.formance_sdk.models.operations.V2DeleteLedgerMetadataResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2DeleteLedgerMetadataRequest req = V2DeleteLedgerMetadataRequest.builder()\n                .ledger(\"ledger001\")\n                .key(\"foo\")\n                .build();\n\n            V2DeleteLedgerMetadataResponse res = sdk.ledger().v2DeleteLedgerMetadata()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/stats"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ReadStats"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ReadStatsRequest;\nimport com.formance.formance_sdk.models.operations.V2ReadStatsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ReadStatsRequest req = V2ReadStatsRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            V2ReadStatsResponse res = sdk.ledger().v2ReadStats()\n                .request(req)\n                .call();\n\n            if (res.v2StatsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/transactions"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListTransactions"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListTransactionsRequest;\nimport com.formance.formance_sdk.models.operations.V2ListTransactionsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListTransactionsRequest req = V2ListTransactionsRequest.builder()\n                .ledger(\"ledger001\")\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            V2ListTransactionsResponse res = sdk.ledger().v2ListTransactions()\n                .request(req)\n                .call();\n\n            if (res.v2TransactionsCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/transactions"]["head"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CountTransactions"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CountTransactionsRequest;\nimport com.formance.formance_sdk.models.operations.V2CountTransactionsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2CountTransactionsRequest req = V2CountTransactionsRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            V2CountTransactionsResponse res = sdk.ledger().v2CountTransactions()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/transactions"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CreateTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CreateTransactionRequest;\nimport com.formance.formance_sdk.models.operations.V2CreateTransactionResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.V2PostTransaction;\nimport com.formance.formance_sdk.models.shared.V2PostTransactionScript;\nimport com.formance.formance_sdk.models.shared.V2Posting;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2CreateTransactionRequest req = V2CreateTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .v2PostTransaction(V2PostTransaction.builder()\n                    .metadata(Map.ofEntries(\n                        Map.entry(\"admin\", \"true\")))\n                    .postings(List.of(\n                        V2Posting.builder()\n                            .amount(new BigInteger(\"100\"))\n                            .asset(\"COIN\")\n                            .destination(\"users:002\")\n                            .source(\"users:001\")\n                            .build()))\n                    .script(V2PostTransactionScript.builder()\n                        .plain(\"vars {\\naccount $user\n                        }\n                        send [COIN 10] (\n                        \tsource = @world\n                        \tdestination = $user\n                        )\n                        \")\n                        .vars(Map.ofEntries(\n                            Map.entry(\"user\", \"users:042\")))\n                        .build())\n                    .reference(\"ref:001\")\n                    .build())\n                .dryRun(true)\n                .build();\n\n            V2CreateTransactionResponse res = sdk.ledger().v2CreateTransaction()\n                .request(req)\n                .call();\n\n            if (res.v2CreateTransactionResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/transactions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetTransactionRequest;\nimport com.formance.formance_sdk.models.operations.V2GetTransactionResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetTransactionRequest req = V2GetTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .id(new BigInteger(\"1234\"))\n                .build();\n\n            V2GetTransactionResponse res = sdk.ledger().v2GetTransaction()\n                .request(req)\n                .call();\n\n            if (res.v2GetTransactionResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/transactions/{id}/metadata"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2AddMetadataOnTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2AddMetadataOnTransactionRequest;\nimport com.formance.formance_sdk.models.operations.V2AddMetadataOnTransactionResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2AddMetadataOnTransactionRequest req = V2AddMetadataOnTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .id(new BigInteger(\"1234\"))\n                .dryRun(true)\n                .requestBody(Map.ofEntries(\n                    Map.entry(\"admin\", \"true\")))\n                .build();\n\n            V2AddMetadataOnTransactionResponse res = sdk.ledger().v2AddMetadataOnTransaction()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/transactions/{id}/metadata/{key}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2DeleteTransactionMetadata"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2DeleteTransactionMetadataRequest;\nimport com.formance.formance_sdk.models.operations.V2DeleteTransactionMetadataResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2DeleteTransactionMetadataRequest req = V2DeleteTransactionMetadataRequest.builder()\n                .ledger(\"ledger001\")\n                .id(new BigInteger(\"1234\"))\n                .key(\"foo\")\n                .build();\n\n            V2DeleteTransactionMetadataResponse res = sdk.ledger().v2DeleteTransactionMetadata()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/transactions/{id}/revert"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2RevertTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2RevertTransactionRequest;\nimport com.formance.formance_sdk.models.operations.V2RevertTransactionResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2RevertTransactionRequest req = V2RevertTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .id(new BigInteger(\"1234\"))\n                .build();\n\n            V2RevertTransactionResponse res = sdk.ledger().v2RevertTransaction()\n                .request(req)\n                .call();\n\n            if (res.v2RevertTransactionResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/v2/{ledger}/volumes"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetVolumesWithBalances"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetVolumesWithBalancesRequest;\nimport com.formance.formance_sdk.models.operations.V2GetVolumesWithBalancesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetVolumesWithBalancesRequest req = V2GetVolumesWithBalancesRequest.builder()\n                .ledger(\"ledger001\")\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .groupBy(3L)\n                .build();\n\n            V2GetVolumesWithBalancesResponse res = sdk.ledger().v2GetVolumesWithBalances()\n                .request(req)\n                .call();\n\n            if (res.v2VolumesWithBalanceCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getLedgerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetLedgerInfoRequest;\nimport com.formance.formance_sdk.models.operations.GetLedgerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetLedgerInfoRequest req = GetLedgerInfoRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            GetLedgerInfoResponse res = sdk.ledger().getLedgerInfo()\n                .request(req)\n                .call();\n\n            if (res.ledgerInfoResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/accounts"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listAccounts"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListAccountsRequest;\nimport com.formance.formance_sdk.models.operations.ListAccountsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListAccountsRequest req = ListAccountsRequest.builder()\n                .ledger(\"ledger001\")\n                .pageSize(100L)\n                .after(\"users:003\")\n                .address(\"users:.+\")\n                .metadata(Map.ofEntries(\n                    Map.entry(\"0\", \"m\"),\n                    Map.entry(\"1\", \"e\"),\n                    Map.entry(\"2\", \"t\"),\n                    Map.entry(\"3\", \"a\"),\n                    Map.entry(\"4\", \"d\"),\n                    Map.entry(\"5\", \"a\"),\n                    Map.entry(\"6\", \"t\"),\n                    Map.entry(\"7\", \"a\"),\n                    Map.entry(\"8\", \"[\"),\n                    Map.entry(\"9\", \"k\"),\n                    Map.entry(\"10\", \"e\"),\n                    Map.entry(\"11\", \"y\"),\n                    Map.entry(\"12\", \"]\"),\n                    Map.entry(\"13\", \"=\"),\n                    Map.entry(\"14\", \"v\"),\n                    Map.entry(\"15\", \"a\"),\n                    Map.entry(\"16\", \"l\"),\n                    Map.entry(\"17\", \"u\"),\n                    Map.entry(\"18\", \"e\"),\n                    Map.entry(\"19\", \"1\"),\n                    Map.entry(\"20\", \"&\"),\n                    Map.entry(\"21\", \"m\"),\n                    Map.entry(\"22\", \"e\"),\n                    Map.entry(\"23\", \"t\"),\n                    Map.entry(\"24\", \"a\"),\n                    Map.entry(\"25\", \"d\"),\n                    Map.entry(\"26\", \"a\"),\n                    Map.entry(\"27\", \"t\"),\n                    Map.entry(\"28\", \"a\"),\n                    Map.entry(\"29\", \"[\"),\n                    Map.entry(\"30\", \"a\"),\n                    Map.entry(\"31\", \".\"),\n                    Map.entry(\"32\", \"n\"),\n                    Map.entry(\"33\", \"e\"),\n                    Map.entry(\"34\", \"s\"),\n                    Map.entry(\"35\", \"t\"),\n                    Map.entry(\"36\", \"e\"),\n                    Map.entry(\"37\", \"d\"),\n                    Map.entry(\"38\", \".\"),\n                    Map.entry(\"39\", \"k\"),\n                    Map.entry(\"40\", \"e\"),\n                    Map.entry(\"41\", \"y\"),\n                    Map.entry(\"42\", \"]\"),\n                    Map.entry(\"43\", \"=\"),\n                    Map.entry(\"44\", \"v\"),\n                    Map.entry(\"45\", \"a\"),\n                    Map.entry(\"46\", \"l\"),\n                    Map.entry(\"47\", \"u\"),\n                    Map.entry(\"48\", \"e\"),\n                    Map.entry(\"49\", \"2\")))\n                .balance(2400L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            ListAccountsResponse res = sdk.ledger().listAccounts()\n                .request(req)\n                .call();\n\n            if (res.accountsCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/accounts"]["head"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "countAccounts"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CountAccountsRequest;\nimport com.formance.formance_sdk.models.operations.CountAccountsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CountAccountsRequest req = CountAccountsRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"users:.+\")\n                .metadata(Map.ofEntries(\n                    Map.entry(\"0\", \"m\"),\n                    Map.entry(\"1\", \"e\"),\n                    Map.entry(\"2\", \"t\"),\n                    Map.entry(\"3\", \"a\"),\n                    Map.entry(\"4\", \"d\"),\n                    Map.entry(\"5\", \"a\"),\n                    Map.entry(\"6\", \"t\"),\n                    Map.entry(\"7\", \"a\"),\n                    Map.entry(\"8\", \"[\"),\n                    Map.entry(\"9\", \"k\"),\n                    Map.entry(\"10\", \"e\"),\n                    Map.entry(\"11\", \"y\"),\n                    Map.entry(\"12\", \"]\"),\n                    Map.entry(\"13\", \"=\"),\n                    Map.entry(\"14\", \"v\"),\n                    Map.entry(\"15\", \"a\"),\n                    Map.entry(\"16\", \"l\"),\n                    Map.entry(\"17\", \"u\"),\n                    Map.entry(\"18\", \"e\"),\n                    Map.entry(\"19\", \"1\"),\n                    Map.entry(\"20\", \"&\"),\n                    Map.entry(\"21\", \"m\"),\n                    Map.entry(\"22\", \"e\"),\n                    Map.entry(\"23\", \"t\"),\n                    Map.entry(\"24\", \"a\"),\n                    Map.entry(\"25\", \"d\"),\n                    Map.entry(\"26\", \"a\"),\n                    Map.entry(\"27\", \"t\"),\n                    Map.entry(\"28\", \"a\"),\n                    Map.entry(\"29\", \"[\"),\n                    Map.entry(\"30\", \"a\"),\n                    Map.entry(\"31\", \".\"),\n                    Map.entry(\"32\", \"n\"),\n                    Map.entry(\"33\", \"e\"),\n                    Map.entry(\"34\", \"s\"),\n                    Map.entry(\"35\", \"t\"),\n                    Map.entry(\"36\", \"e\"),\n                    Map.entry(\"37\", \"d\"),\n                    Map.entry(\"38\", \".\"),\n                    Map.entry(\"39\", \"k\"),\n                    Map.entry(\"40\", \"e\"),\n                    Map.entry(\"41\", \"y\"),\n                    Map.entry(\"42\", \"]\"),\n                    Map.entry(\"43\", \"=\"),\n                    Map.entry(\"44\", \"v\"),\n                    Map.entry(\"45\", \"a\"),\n                    Map.entry(\"46\", \"l\"),\n                    Map.entry(\"47\", \"u\"),\n                    Map.entry(\"48\", \"e\"),\n                    Map.entry(\"49\", \"2\")))\n                .build();\n\n            CountAccountsResponse res = sdk.ledger().countAccounts()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/accounts/{address}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetAccountRequest;\nimport com.formance.formance_sdk.models.operations.GetAccountResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetAccountRequest req = GetAccountRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"users:001\")\n                .build();\n\n            GetAccountResponse res = sdk.ledger().getAccount()\n                .request(req)\n                .call();\n\n            if (res.accountResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/accounts/{address}/metadata"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "addMetadataToAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.AddMetadataToAccountRequest;\nimport com.formance.formance_sdk.models.operations.AddMetadataToAccountResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            AddMetadataToAccountRequest req = AddMetadataToAccountRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"users:001\")\n                .requestBody(Map.ofEntries(\n                    Map.entry(\"key\", \"<value>\")))\n                .build();\n\n            AddMetadataToAccountResponse res = sdk.ledger().addMetadataToAccount()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/aggregate/balances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getBalancesAggregated"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetBalancesAggregatedRequest;\nimport com.formance.formance_sdk.models.operations.GetBalancesAggregatedResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetBalancesAggregatedRequest req = GetBalancesAggregatedRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"users:001\")\n                .build();\n\n            GetBalancesAggregatedResponse res = sdk.ledger().getBalancesAggregated()\n                .request(req)\n                .call();\n\n            if (res.aggregateBalancesResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/balances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getBalances"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetBalancesRequest;\nimport com.formance.formance_sdk.models.operations.GetBalancesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetBalancesRequest req = GetBalancesRequest.builder()\n                .ledger(\"ledger001\")\n                .address(\"users:001\")\n                .after(\"users:003\")\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            GetBalancesResponse res = sdk.ledger().getBalances()\n                .request(req)\n                .call();\n\n            if (res.balancesCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/logs"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listLogs"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListLogsRequest;\nimport com.formance.formance_sdk.models.operations.ListLogsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListLogsRequest req = ListLogsRequest.builder()\n                .ledger(\"ledger001\")\n                .pageSize(100L)\n                .after(\"1234\")\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            ListLogsResponse res = sdk.ledger().listLogs()\n                .request(req)\n                .call();\n\n            if (res.logsCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/mapping"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getMapping"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetMappingRequest;\nimport com.formance.formance_sdk.models.operations.GetMappingResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetMappingRequest req = GetMappingRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            GetMappingResponse res = sdk.ledger().getMapping()\n                .request(req)\n                .call();\n\n            if (res.mappingResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/mapping"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "updateMapping"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UpdateMappingRequest;\nimport com.formance.formance_sdk.models.operations.UpdateMappingResponse;\nimport com.formance.formance_sdk.models.shared.Contract;\nimport com.formance.formance_sdk.models.shared.Expr;\nimport com.formance.formance_sdk.models.shared.Mapping;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UpdateMappingRequest req = UpdateMappingRequest.builder()\n                .ledger(\"ledger001\")\n                .mapping(Mapping.builder()\n                    .contracts(List.of(\n                        Contract.builder()\n                            .expr(Expr.builder()\n                                .build())\n                            .account(\"users:001\")\n                            .build()))\n                    .build())\n                .build();\n\n            UpdateMappingResponse res = sdk.ledger().updateMapping()\n                .request(req)\n                .call();\n\n            if (res.mappingResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/script"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "runScript"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.RunScriptRequest;\nimport com.formance.formance_sdk.models.operations.RunScriptResponse;\nimport com.formance.formance_sdk.models.shared.Script;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            RunScriptRequest req = RunScriptRequest.builder()\n                .ledger(\"ledger001\")\n                .script(Script.builder()\n                    .plain(\"vars {\\naccount $user\n                    }\n                    send [COIN 10] (\n                    \tsource = @world\n                    \tdestination = $user\n                    )\n                    \")\n                    .vars(Map.ofEntries(\n                        Map.entry(\"user\", \"users:042\")))\n                    .reference(\"order_1234\")\n                    .build())\n                .preview(true)\n                .build();\n\n            RunScriptResponse res = sdk.ledger().runScript()\n                .request(req)\n                .call();\n\n            if (res.scriptResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/stats"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "readStats"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReadStatsRequest;\nimport com.formance.formance_sdk.models.operations.ReadStatsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReadStatsRequest req = ReadStatsRequest.builder()\n                .ledger(\"ledger001\")\n                .build();\n\n            ReadStatsResponse res = sdk.ledger().readStats()\n                .request(req)\n                .call();\n\n            if (res.statsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/transactions"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listTransactions"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListTransactionsRequest;\nimport com.formance.formance_sdk.models.operations.ListTransactionsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListTransactionsRequest req = ListTransactionsRequest.builder()\n                .ledger(\"ledger001\")\n                .pageSize(100L)\n                .after(\"1234\")\n                .reference(\"ref:001\")\n                .account(\"users:001\")\n                .source(\"users:001\")\n                .destination(\"users:001\")\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            ListTransactionsResponse res = sdk.ledger().listTransactions()\n                .request(req)\n                .call();\n\n            if (res.transactionsCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/transactions"]["head"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "countTransactions"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CountTransactionsRequest;\nimport com.formance.formance_sdk.models.operations.CountTransactionsResponse;\nimport com.formance.formance_sdk.models.operations.Metadata;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CountTransactionsRequest req = CountTransactionsRequest.builder()\n                .ledger(\"ledger001\")\n                .reference(\"ref:001\")\n                .account(\"users:001\")\n                .source(\"users:001\")\n                .destination(\"users:001\")\n                .metadata(Metadata.builder()\n                    .build())\n                .build();\n\n            CountTransactionsResponse res = sdk.ledger().countTransactions()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/transactions"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateTransactionRequest;\nimport com.formance.formance_sdk.models.operations.CreateTransactionResponse;\nimport com.formance.formance_sdk.models.shared.PostTransaction;\nimport com.formance.formance_sdk.models.shared.PostTransactionScript;\nimport com.formance.formance_sdk.models.shared.Posting;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreateTransactionRequest req = CreateTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .postTransaction(PostTransaction.builder()\n                    .postings(List.of(\n                        Posting.builder()\n                            .amount(new BigInteger(\"100\"))\n                            .asset(\"COIN\")\n                            .destination(\"users:002\")\n                            .source(\"users:001\")\n                            .build()))\n                    .script(PostTransactionScript.builder()\n                        .plain(\"vars {\\naccount $user\n                        }\n                        send [COIN 10] (\n                        \tsource = @world\n                        \tdestination = $user\n                        )\n                        \")\n                        .vars(Map.ofEntries(\n                            Map.entry(\"user\", \"users:042\")))\n                        .build())\n                    .reference(\"ref:001\")\n                    .build())\n                .preview(true)\n                .build();\n\n            CreateTransactionResponse res = sdk.ledger().createTransaction()\n                .request(req)\n                .call();\n\n            if (res.transactionsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/transactions/batch"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "CreateTransactions"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateTransactionsRequest;\nimport com.formance.formance_sdk.models.operations.CreateTransactionsResponse;\nimport com.formance.formance_sdk.models.shared.Posting;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.TransactionData;\nimport com.formance.formance_sdk.models.shared.Transactions;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreateTransactionsRequest req = CreateTransactionsRequest.builder()\n                .ledger(\"ledger001\")\n                .transactions(Transactions.builder()\n                    .transactions(List.of(\n                        TransactionData.builder()\n                            .postings(List.of(\n                                Posting.builder()\n                                    .amount(new BigInteger(\"100\"))\n                                    .asset(\"COIN\")\n                                    .destination(\"users:002\")\n                                    .source(\"users:001\")\n                                    .build()))\n                            .reference(\"ref:001\")\n                            .build()))\n                    .build())\n                .build();\n\n            CreateTransactionsResponse res = sdk.ledger().createTransactions()\n                .request(req)\n                .call();\n\n            if (res.transactionsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/transactions/{txid}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetTransactionRequest;\nimport com.formance.formance_sdk.models.operations.GetTransactionResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetTransactionRequest req = GetTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .txid(new BigInteger(\"1234\"))\n                .build();\n\n            GetTransactionResponse res = sdk.ledger().getTransaction()\n                .request(req)\n                .call();\n\n            if (res.transactionResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/transactions/{txid}/metadata"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "addMetadataOnTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.AddMetadataOnTransactionRequest;\nimport com.formance.formance_sdk.models.operations.AddMetadataOnTransactionResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            AddMetadataOnTransactionRequest req = AddMetadataOnTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .txid(new BigInteger(\"1234\"))\n                .build();\n\n            AddMetadataOnTransactionResponse res = sdk.ledger().addMetadataOnTransaction()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/ledger/{ledger}/transactions/{txid}/revert"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "revertTransaction"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.RevertTransactionRequest;\nimport com.formance.formance_sdk.models.operations.RevertTransactionResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            RevertTransactionRequest req = RevertTransactionRequest.builder()\n                .ledger(\"ledger001\")\n                .txid(new BigInteger(\"1234\"))\n                .build();\n\n            RevertTransactionResponse res = sdk.ledger().revertTransaction()\n                .request(req)\n                .call();\n\n            if (res.transactionResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "orchestrationgetServerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.OrchestrationgetServerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            OrchestrationgetServerInfoResponse res = sdk.orchestration().orchestrationgetServerInfo()\n                .call();\n\n            if (res.serverInfo().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/instances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listInstances"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListInstancesRequest;\nimport com.formance.formance_sdk.models.operations.ListInstancesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListInstancesRequest req = ListInstancesRequest.builder()\n                .workflowID(\"xxx\")\n                .running(true)\n                .build();\n\n            ListInstancesResponse res = sdk.orchestration().listInstances()\n                .request(req)\n                .call();\n\n            if (res.listRunsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/instances/{instanceID}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getInstance"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetInstanceRequest;\nimport com.formance.formance_sdk.models.operations.GetInstanceResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetInstanceRequest req = GetInstanceRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            GetInstanceResponse res = sdk.orchestration().getInstance()\n                .request(req)\n                .call();\n\n            if (res.getWorkflowInstanceResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/instances/{instanceID}/abort"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "cancelEvent"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CancelEventRequest;\nimport com.formance.formance_sdk.models.operations.CancelEventResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CancelEventRequest req = CancelEventRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            CancelEventResponse res = sdk.orchestration().cancelEvent()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/instances/{instanceID}/events"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "sendEvent"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.SendEventRequest;\nimport com.formance.formance_sdk.models.operations.SendEventResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            SendEventRequest req = SendEventRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            SendEventResponse res = sdk.orchestration().sendEvent()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/instances/{instanceID}/history"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getInstanceHistory"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetInstanceHistoryRequest;\nimport com.formance.formance_sdk.models.operations.GetInstanceHistoryResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetInstanceHistoryRequest req = GetInstanceHistoryRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            GetInstanceHistoryResponse res = sdk.orchestration().getInstanceHistory()\n                .request(req)\n                .call();\n\n            if (res.getWorkflowInstanceHistoryResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/instances/{instanceID}/stages/{number}/history"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getInstanceStageHistory"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetInstanceStageHistoryRequest;\nimport com.formance.formance_sdk.models.operations.GetInstanceStageHistoryResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetInstanceStageHistoryRequest req = GetInstanceStageHistoryRequest.builder()\n                .instanceID(\"xxx\")\n                .number(0L)\n                .build();\n\n            GetInstanceStageHistoryResponse res = sdk.orchestration().getInstanceStageHistory()\n                .request(req)\n                .call();\n\n            if (res.getWorkflowInstanceHistoryStageResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/triggers"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listTriggers"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListTriggersRequest;\nimport com.formance.formance_sdk.models.operations.ListTriggersResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListTriggersRequest req = ListTriggersRequest.builder()\n                .build();\n\n            ListTriggersResponse res = sdk.orchestration().listTriggers()\n                .request(req)\n                .call();\n\n            if (res.listTriggersResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/triggers"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createTrigger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateTriggerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.TriggerData;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            TriggerData req = TriggerData.builder()\n                .event(\"<value>\")\n                .workflowID(\"<value>\")\n                .build();\n\n            CreateTriggerResponse res = sdk.orchestration().createTrigger()\n                .request(req)\n                .call();\n\n            if (res.createTriggerResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/triggers/{triggerID}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deleteTrigger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeleteTriggerRequest;\nimport com.formance.formance_sdk.models.operations.DeleteTriggerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeleteTriggerRequest req = DeleteTriggerRequest.builder()\n                .triggerID(\"<value>\")\n                .build();\n\n            DeleteTriggerResponse res = sdk.orchestration().deleteTrigger()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/triggers/{triggerID}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "readTrigger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReadTriggerRequest;\nimport com.formance.formance_sdk.models.operations.ReadTriggerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReadTriggerRequest req = ReadTriggerRequest.builder()\n                .triggerID(\"<value>\")\n                .build();\n\n            ReadTriggerResponse res = sdk.orchestration().readTrigger()\n                .request(req)\n                .call();\n\n            if (res.readTriggerResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/triggers/{triggerID}/occurrences"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listTriggersOccurrences"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListTriggersOccurrencesRequest;\nimport com.formance.formance_sdk.models.operations.ListTriggersOccurrencesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListTriggersOccurrencesRequest req = ListTriggersOccurrencesRequest.builder()\n                .triggerID(\"<value>\")\n                .build();\n\n            ListTriggersOccurrencesResponse res = sdk.orchestration().listTriggersOccurrences()\n                .request(req)\n                .call();\n\n            if (res.listTriggersOccurrencesResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetServerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetServerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetServerInfoResponse res = sdk.orchestration().v2GetServerInfo()\n                .call();\n\n            if (res.v2ServerInfo().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/instances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListInstances"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListInstancesRequest;\nimport com.formance.formance_sdk.models.operations.V2ListInstancesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListInstancesRequest req = V2ListInstancesRequest.builder()\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .pageSize(100L)\n                .workflowID(\"xxx\")\n                .running(true)\n                .build();\n\n            V2ListInstancesResponse res = sdk.orchestration().v2ListInstances()\n                .request(req)\n                .call();\n\n            if (res.v2ListRunsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/instances/{instanceID}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetInstance"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetInstanceRequest;\nimport com.formance.formance_sdk.models.operations.V2GetInstanceResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetInstanceRequest req = V2GetInstanceRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            V2GetInstanceResponse res = sdk.orchestration().v2GetInstance()\n                .request(req)\n                .call();\n\n            if (res.v2GetWorkflowInstanceResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/instances/{instanceID}/abort"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CancelEvent"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CancelEventRequest;\nimport com.formance.formance_sdk.models.operations.V2CancelEventResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2CancelEventRequest req = V2CancelEventRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            V2CancelEventResponse res = sdk.orchestration().v2CancelEvent()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/instances/{instanceID}/events"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2SendEvent"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2SendEventRequest;\nimport com.formance.formance_sdk.models.operations.V2SendEventResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2SendEventRequest req = V2SendEventRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            V2SendEventResponse res = sdk.orchestration().v2SendEvent()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/instances/{instanceID}/history"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetInstanceHistory"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetInstanceHistoryRequest;\nimport com.formance.formance_sdk.models.operations.V2GetInstanceHistoryResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetInstanceHistoryRequest req = V2GetInstanceHistoryRequest.builder()\n                .instanceID(\"xxx\")\n                .build();\n\n            V2GetInstanceHistoryResponse res = sdk.orchestration().v2GetInstanceHistory()\n                .request(req)\n                .call();\n\n            if (res.v2GetWorkflowInstanceHistoryResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/instances/{instanceID}/stages/{number}/history"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetInstanceStageHistory"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetInstanceStageHistoryRequest;\nimport com.formance.formance_sdk.models.operations.V2GetInstanceStageHistoryResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetInstanceStageHistoryRequest req = V2GetInstanceStageHistoryRequest.builder()\n                .instanceID(\"xxx\")\n                .number(0L)\n                .build();\n\n            V2GetInstanceStageHistoryResponse res = sdk.orchestration().v2GetInstanceStageHistory()\n                .request(req)\n                .call();\n\n            if (res.v2GetWorkflowInstanceHistoryStageResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/triggers"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListTriggers"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListTriggersRequest;\nimport com.formance.formance_sdk.models.operations.V2ListTriggersResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListTriggersRequest req = V2ListTriggersRequest.builder()\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .pageSize(100L)\n                .build();\n\n            V2ListTriggersResponse res = sdk.orchestration().v2ListTriggers()\n                .request(req)\n                .call();\n\n            if (res.v2ListTriggersResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/triggers"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CreateTrigger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CreateTriggerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.V2TriggerData;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2TriggerData req = V2TriggerData.builder()\n                .event(\"<value>\")\n                .workflowID(\"<value>\")\n                .build();\n\n            V2CreateTriggerResponse res = sdk.orchestration().v2CreateTrigger()\n                .request(req)\n                .call();\n\n            if (res.v2CreateTriggerResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/triggers/{triggerID}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2DeleteTrigger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2DeleteTriggerRequest;\nimport com.formance.formance_sdk.models.operations.V2DeleteTriggerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2DeleteTriggerRequest req = V2DeleteTriggerRequest.builder()\n                .triggerID(\"<value>\")\n                .build();\n\n            V2DeleteTriggerResponse res = sdk.orchestration().v2DeleteTrigger()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/triggers/{triggerID}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ReadTrigger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ReadTriggerRequest;\nimport com.formance.formance_sdk.models.operations.V2ReadTriggerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ReadTriggerRequest req = V2ReadTriggerRequest.builder()\n                .triggerID(\"<value>\")\n                .build();\n\n            V2ReadTriggerResponse res = sdk.orchestration().v2ReadTrigger()\n                .request(req)\n                .call();\n\n            if (res.v2ReadTriggerResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/triggers/{triggerID}/occurrences"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListTriggersOccurrences"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListTriggersOccurrencesRequest;\nimport com.formance.formance_sdk.models.operations.V2ListTriggersOccurrencesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListTriggersOccurrencesRequest req = V2ListTriggersOccurrencesRequest.builder()\n                .triggerID(\"<value>\")\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .pageSize(100L)\n                .build();\n\n            V2ListTriggersOccurrencesResponse res = sdk.orchestration().v2ListTriggersOccurrences()\n                .request(req)\n                .call();\n\n            if (res.v2ListTriggersOccurrencesResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/triggers/{triggerID}/test"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "testTrigger"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.TestTriggerRequest;\nimport com.formance.formance_sdk.models.operations.TestTriggerResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            TestTriggerRequest req = TestTriggerRequest.builder()\n                .triggerID(\"<value>\")\n                .build();\n\n            TestTriggerResponse res = sdk.orchestration().testTrigger()\n                .request(req)\n                .call();\n\n            if (res.v2TestTriggerResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/workflows"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2ListWorkflows"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2ListWorkflowsRequest;\nimport com.formance.formance_sdk.models.operations.V2ListWorkflowsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2ListWorkflowsRequest req = V2ListWorkflowsRequest.builder()\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .pageSize(100L)\n                .build();\n\n            V2ListWorkflowsResponse res = sdk.orchestration().v2ListWorkflows()\n                .request(req)\n                .call();\n\n            if (res.v2ListWorkflowsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/workflows"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2CreateWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2CreateWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.V2CreateWorkflowRequest;\nimport java.lang.Exception;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2CreateWorkflowRequest req = V2CreateWorkflowRequest.builder()\n                .stages(List.of(\n                    Map.ofEntries(\n                        Map.entry(\"key\", \"<value>\"))))\n                .build();\n\n            V2CreateWorkflowResponse res = sdk.orchestration().v2CreateWorkflow()\n                .request(req)\n                .call();\n\n            if (res.v2CreateWorkflowResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/workflows/{flowId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2DeleteWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2DeleteWorkflowRequest;\nimport com.formance.formance_sdk.models.operations.V2DeleteWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2DeleteWorkflowRequest req = V2DeleteWorkflowRequest.builder()\n                .flowId(\"xxx\")\n                .build();\n\n            V2DeleteWorkflowResponse res = sdk.orchestration().v2DeleteWorkflow()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/workflows/{flowId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2GetWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2GetWorkflowRequest;\nimport com.formance.formance_sdk.models.operations.V2GetWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2GetWorkflowRequest req = V2GetWorkflowRequest.builder()\n                .flowId(\"xxx\")\n                .build();\n\n            V2GetWorkflowResponse res = sdk.orchestration().v2GetWorkflow()\n                .request(req)\n                .call();\n\n            if (res.v2GetWorkflowResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/v2/workflows/{workflowID}/instances"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "v2RunWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.V2RunWorkflowRequest;\nimport com.formance.formance_sdk.models.operations.V2RunWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            V2RunWorkflowRequest req = V2RunWorkflowRequest.builder()\n                .workflowID(\"xxx\")\n                .build();\n\n            V2RunWorkflowResponse res = sdk.orchestration().v2RunWorkflow()\n                .request(req)\n                .call();\n\n            if (res.v2RunWorkflowResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.V2Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/workflows"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listWorkflows"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListWorkflowsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListWorkflowsResponse res = sdk.orchestration().listWorkflows()\n                .call();\n\n            if (res.listWorkflowsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/workflows"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.CreateWorkflowRequest;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreateWorkflowRequest req = CreateWorkflowRequest.builder()\n                .stages(List.of(\n                    Map.ofEntries(\n                        Map.entry(\"key\", \"<value>\"))))\n                .build();\n\n            CreateWorkflowResponse res = sdk.orchestration().createWorkflow()\n                .request(req)\n                .call();\n\n            if (res.createWorkflowResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/workflows/{flowId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deleteWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeleteWorkflowRequest;\nimport com.formance.formance_sdk.models.operations.DeleteWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeleteWorkflowRequest req = DeleteWorkflowRequest.builder()\n                .flowId(\"xxx\")\n                .build();\n\n            DeleteWorkflowResponse res = sdk.orchestration().deleteWorkflow()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/workflows/{flowId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetWorkflowRequest;\nimport com.formance.formance_sdk.models.operations.GetWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetWorkflowRequest req = GetWorkflowRequest.builder()\n                .flowId(\"xxx\")\n                .build();\n\n            GetWorkflowResponse res = sdk.orchestration().getWorkflow()\n                .request(req)\n                .call();\n\n            if (res.getWorkflowResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/orchestration/workflows/{workflowID}/instances"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "runWorkflow"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.RunWorkflowRequest;\nimport com.formance.formance_sdk.models.operations.RunWorkflowResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            RunWorkflowRequest req = RunWorkflowRequest.builder()\n                .workflowID(\"xxx\")\n                .build();\n\n            RunWorkflowResponse res = sdk.orchestration().runWorkflow()\n                .request(req)\n                .call();\n\n            if (res.runWorkflowResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.Error e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "paymentsgetServerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.PaymentsgetServerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            PaymentsgetServerInfoResponse res = sdk.payments().paymentsgetServerInfo()\n                .call();\n\n            if (res.serverInfo().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/accounts"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "paymentslistAccounts"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.PaymentslistAccountsRequest;\nimport com.formance.formance_sdk.models.operations.PaymentslistAccountsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            PaymentslistAccountsRequest req = PaymentslistAccountsRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .sort(List.of(\n                    \"date:asc\",\n                    \"status:desc\"))\n                .build();\n\n            PaymentslistAccountsResponse res = sdk.payments().paymentslistAccounts()\n                .request(req)\n                .call();\n\n            if (res.accountsCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/accounts"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateAccountResponse;\nimport com.formance.formance_sdk.models.shared.AccountRequest;\nimport com.formance.formance_sdk.models.shared.AccountType;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.time.OffsetDateTime;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            AccountRequest req = AccountRequest.builder()\n                .reference(\"<value>\")\n                .connectorID(\"<value>\")\n                .createdAt(OffsetDateTime.parse(\"2024-08-19T02:15:08.668Z\"))\n                .type(AccountType.UNKNOWN)\n                .build();\n\n            CreateAccountResponse res = sdk.payments().createAccount()\n                .request(req)\n                .call();\n\n            if (res.paymentsAccountResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/accounts/{accountId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "paymentsgetAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.PaymentsgetAccountRequest;\nimport com.formance.formance_sdk.models.operations.PaymentsgetAccountResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            PaymentsgetAccountRequest req = PaymentsgetAccountRequest.builder()\n                .accountId(\"XXX\")\n                .build();\n\n            PaymentsgetAccountResponse res = sdk.payments().paymentsgetAccount()\n                .request(req)\n                .call();\n\n            if (res.paymentsAccountResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/accounts/{accountId}/balances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getAccountBalances"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetAccountBalancesRequest;\nimport com.formance.formance_sdk.models.operations.GetAccountBalancesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetAccountBalancesRequest req = GetAccountBalancesRequest.builder()\n                .accountId(\"XXX\")\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .sort(List.of(\n                    \"date:asc\",\n                    \"status:desc\"))\n                .build();\n\n            GetAccountBalancesResponse res = sdk.payments().getAccountBalances()\n                .request(req)\n                .call();\n\n            if (res.balancesCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/bank-accounts"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listBankAccounts"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListBankAccountsRequest;\nimport com.formance.formance_sdk.models.operations.ListBankAccountsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListBankAccountsRequest req = ListBankAccountsRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .sort(List.of(\n                    \"date:asc\",\n                    \"status:desc\"))\n                .build();\n\n            ListBankAccountsResponse res = sdk.payments().listBankAccounts()\n                .request(req)\n                .call();\n\n            if (res.bankAccountsCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/bank-accounts"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createBankAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateBankAccountResponse;\nimport com.formance.formance_sdk.models.shared.BankAccountRequest;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            BankAccountRequest req = BankAccountRequest.builder()\n                .country(\"GB\")\n                .connectorID(\"<value>\")\n                .name(\"My account\")\n                .build();\n\n            CreateBankAccountResponse res = sdk.payments().createBankAccount()\n                .request(req)\n                .call();\n\n            if (res.bankAccountResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/bank-accounts/{bankAccountId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getBankAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetBankAccountRequest;\nimport com.formance.formance_sdk.models.operations.GetBankAccountResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetBankAccountRequest req = GetBankAccountRequest.builder()\n                .bankAccountId(\"XXX\")\n                .build();\n\n            GetBankAccountResponse res = sdk.payments().getBankAccount()\n                .request(req)\n                .call();\n\n            if (res.bankAccountResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/bank-accounts/{bankAccountId}/forward"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "forwardBankAccount"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ForwardBankAccountRequest;\nimport com.formance.formance_sdk.models.operations.ForwardBankAccountResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ForwardBankAccountRequest req = ForwardBankAccountRequest.builder()\n                .bankAccountId(\"XXX\")\n                .forwardBankAccountRequest(com.formance.formance_sdk.models.shared.ForwardBankAccountRequest.builder()\n                    .connectorID(\"<value>\")\n                    .build())\n                .build();\n\n            ForwardBankAccountResponse res = sdk.payments().forwardBankAccount()\n                .request(req)\n                .call();\n\n            if (res.bankAccountResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/bank-accounts/{bankAccountId}/metadata"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "updateBankAccountMetadata"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UpdateBankAccountMetadataRequest;\nimport com.formance.formance_sdk.models.operations.UpdateBankAccountMetadataResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UpdateBankAccountMetadataRequest req = UpdateBankAccountMetadataRequest.builder()\n                .bankAccountId(\"XXX\")\n                .updateBankAccountMetadataRequest(com.formance.formance_sdk.models.shared.UpdateBankAccountMetadataRequest.builder()\n                    .metadata(Map.ofEntries(\n                        Map.entry(\"key\", \"<value>\")))\n                    .build())\n                .build();\n\n            UpdateBankAccountMetadataResponse res = sdk.payments().updateBankAccountMetadata()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listAllConnectors"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListAllConnectorsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListAllConnectorsResponse res = sdk.payments().listAllConnectors()\n                .call();\n\n            if (res.connectorsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/configs"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listConfigsAvailableConnectors"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListConfigsAvailableConnectorsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListConfigsAvailableConnectorsResponse res = sdk.payments().listConfigsAvailableConnectors()\n                .call();\n\n            if (res.connectorsConfigsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "uninstallConnector"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UninstallConnectorRequest;\nimport com.formance.formance_sdk.models.operations.UninstallConnectorResponse;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UninstallConnectorRequest req = UninstallConnectorRequest.builder()\n                .connector(Connector.MODULR)\n                .build();\n\n            UninstallConnectorResponse res = sdk.payments().uninstallConnector()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "installConnector"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.InstallConnectorRequest;\nimport com.formance.formance_sdk.models.operations.InstallConnectorResponse;\nimport com.formance.formance_sdk.models.shared.AdyenConfig;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.ConnectorConfig;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            InstallConnectorRequest req = InstallConnectorRequest.builder()\n                .connector(Connector.WISE)\n                .connectorConfig(ConnectorConfig.of(AdyenConfig.builder()\n                    .name(\"My Adyen Account\")\n                    .apiKey(\"XXX\")\n                    .hmacKey(\"XXX\")\n                    .liveEndpointPrefix(\"XXX\")\n                    .pollingPeriod(\"60s\")\n                    .build()))\n                .build();\n\n            InstallConnectorResponse res = sdk.payments().installConnector()\n                .request(req)\n                .call();\n\n            if (res.connectorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/config"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "readConnectorConfig"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReadConnectorConfigRequest;\nimport com.formance.formance_sdk.models.operations.ReadConnectorConfigResponse;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReadConnectorConfigRequest req = ReadConnectorConfigRequest.builder()\n                .connector(Connector.GENERIC)\n                .build();\n\n            ReadConnectorConfigResponse res = sdk.payments().readConnectorConfig()\n                .request(req)\n                .call();\n\n            if (res.connectorConfigResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/reset"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "resetConnector"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ResetConnectorRequest;\nimport com.formance.formance_sdk.models.operations.ResetConnectorResponse;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ResetConnectorRequest req = ResetConnectorRequest.builder()\n                .connector(Connector.ATLAR)\n                .build();\n\n            ResetConnectorResponse res = sdk.payments().resetConnector()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/tasks"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listConnectorTasks"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListConnectorTasksRequest;\nimport com.formance.formance_sdk.models.operations.ListConnectorTasksResponse;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListConnectorTasksRequest req = ListConnectorTasksRequest.builder()\n                .connector(Connector.MODULR)\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            ListConnectorTasksResponse res = sdk.payments().listConnectorTasks()\n                .request(req)\n                .call();\n\n            if (res.tasksCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/tasks/{taskId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getConnectorTask"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetConnectorTaskRequest;\nimport com.formance.formance_sdk.models.operations.GetConnectorTaskResponse;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetConnectorTaskRequest req = GetConnectorTaskRequest.builder()\n                .connector(Connector.ADYEN)\n                .taskId(\"task1\")\n                .build();\n\n            GetConnectorTaskResponse res = sdk.payments().getConnectorTask()\n                .request(req)\n                .call();\n\n            if (res.taskResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/transfers"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "connectorsTransfer"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ConnectorsTransferRequest;\nimport com.formance.formance_sdk.models.operations.ConnectorsTransferResponse;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.TransferRequest;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ConnectorsTransferRequest req = ConnectorsTransferRequest.builder()\n                .connector(Connector.BANKING_CIRCLE)\n                .transferRequest(TransferRequest.builder()\n                    .amount(new BigInteger(\"100\"))\n                    .asset(\"USD\")\n                    .destination(\"acct_1Gqj58KZcSIg2N2q\")\n                    .source(\"acct_1Gqj58KZcSIg2N2q\")\n                    .build())\n                .build();\n\n            ConnectorsTransferResponse res = sdk.payments().connectorsTransfer()\n                .request(req)\n                .call();\n\n            if (res.transferResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/{connectorId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "uninstallConnectorV1"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UninstallConnectorV1Request;\nimport com.formance.formance_sdk.models.operations.UninstallConnectorV1Response;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UninstallConnectorV1Request req = UninstallConnectorV1Request.builder()\n                .connector(Connector.GENERIC)\n                .connectorId(\"XXX\")\n                .build();\n\n            UninstallConnectorV1Response res = sdk.payments().uninstallConnectorV1()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/{connectorId}/config"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "readConnectorConfigV1"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReadConnectorConfigV1Request;\nimport com.formance.formance_sdk.models.operations.ReadConnectorConfigV1Response;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReadConnectorConfigV1Request req = ReadConnectorConfigV1Request.builder()\n                .connector(Connector.CURRENCY_CLOUD)\n                .connectorId(\"XXX\")\n                .build();\n\n            ReadConnectorConfigV1Response res = sdk.payments().readConnectorConfigV1()\n                .request(req)\n                .call();\n\n            if (res.connectorConfigResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/{connectorId}/config"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "updateConnectorConfigV1"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UpdateConnectorConfigV1Request;\nimport com.formance.formance_sdk.models.operations.UpdateConnectorConfigV1Response;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.ConnectorConfig;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.StripeConfig;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UpdateConnectorConfigV1Request req = UpdateConnectorConfigV1Request.builder()\n                .connector(Connector.STRIPE)\n                .connectorId(\"XXX\")\n                .connectorConfig(ConnectorConfig.of(StripeConfig.builder()\n                    .name(\"My Stripe Account\")\n                    .apiKey(\"XXX\")\n                    .pollingPeriod(\"60s\")\n                    .pageSize(50L)\n                    .build()))\n                .build();\n\n            UpdateConnectorConfigV1Response res = sdk.payments().updateConnectorConfigV1()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/{connectorId}/reset"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "resetConnectorV1"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ResetConnectorV1Request;\nimport com.formance.formance_sdk.models.operations.ResetConnectorV1Response;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ResetConnectorV1Request req = ResetConnectorV1Request.builder()\n                .connector(Connector.GENERIC)\n                .connectorId(\"XXX\")\n                .build();\n\n            ResetConnectorV1Response res = sdk.payments().resetConnectorV1()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/{connectorId}/tasks"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listConnectorTasksV1"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListConnectorTasksV1Request;\nimport com.formance.formance_sdk.models.operations.ListConnectorTasksV1Response;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListConnectorTasksV1Request req = ListConnectorTasksV1Request.builder()\n                .connector(Connector.BANKING_CIRCLE)\n                .connectorId(\"XXX\")\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            ListConnectorTasksV1Response res = sdk.payments().listConnectorTasksV1()\n                .request(req)\n                .call();\n\n            if (res.tasksCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/connectors/{connector}/{connectorId}/tasks/{taskId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getConnectorTaskV1"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetConnectorTaskV1Request;\nimport com.formance.formance_sdk.models.operations.GetConnectorTaskV1Response;\nimport com.formance.formance_sdk.models.shared.Connector;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetConnectorTaskV1Request req = GetConnectorTaskV1Request.builder()\n                .connector(Connector.BANKING_CIRCLE)\n                .connectorId(\"XXX\")\n                .taskId(\"task1\")\n                .build();\n\n            GetConnectorTaskV1Response res = sdk.payments().getConnectorTaskV1()\n                .request(req)\n                .call();\n\n            if (res.taskResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/payments"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listPayments"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListPaymentsRequest;\nimport com.formance.formance_sdk.models.operations.ListPaymentsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListPaymentsRequest req = ListPaymentsRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .sort(List.of(\n                    \"date:asc\",\n                    \"status:desc\"))\n                .build();\n\n            ListPaymentsResponse res = sdk.payments().listPayments()\n                .request(req)\n                .call();\n\n            if (res.paymentsCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/payments"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createPayment"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreatePaymentResponse;\nimport com.formance.formance_sdk.models.shared.PaymentRequest;\nimport com.formance.formance_sdk.models.shared.PaymentScheme;\nimport com.formance.formance_sdk.models.shared.PaymentStatus;\nimport com.formance.formance_sdk.models.shared.PaymentType;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            PaymentRequest req = PaymentRequest.builder()\n                .reference(\"<value>\")\n                .connectorID(\"<value>\")\n                .createdAt(OffsetDateTime.parse(\"2024-11-09T01:03:21.153Z\"))\n                .amount(new BigInteger(\"100\"))\n                .type(PaymentType.TRANSFER)\n                .status(PaymentStatus.DISPUTE_WON)\n                .scheme(PaymentScheme.DOKU)\n                .asset(\"USD\")\n                .build();\n\n            CreatePaymentResponse res = sdk.payments().createPayment()\n                .request(req)\n                .call();\n\n            if (res.paymentResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/payments/{paymentId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getPayment"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetPaymentRequest;\nimport com.formance.formance_sdk.models.operations.GetPaymentResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetPaymentRequest req = GetPaymentRequest.builder()\n                .paymentId(\"XXX\")\n                .build();\n\n            GetPaymentResponse res = sdk.payments().getPayment()\n                .request(req)\n                .call();\n\n            if (res.paymentResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/payments/{paymentId}/metadata"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "updateMetadata"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UpdateMetadataRequest;\nimport com.formance.formance_sdk.models.operations.UpdateMetadataResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UpdateMetadataRequest req = UpdateMetadataRequest.builder()\n                .paymentId(\"XXX\")\n                .requestBody(Map.ofEntries(\n                    Map.entry(\"key\", \"<value>\")))\n                .build();\n\n            UpdateMetadataResponse res = sdk.payments().updateMetadata()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/pools"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listPools"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListPoolsRequest;\nimport com.formance.formance_sdk.models.operations.ListPoolsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListPoolsRequest req = ListPoolsRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .sort(List.of(\n                    \"date:asc\",\n                    \"status:desc\"))\n                .build();\n\n            ListPoolsResponse res = sdk.payments().listPools()\n                .request(req)\n                .call();\n\n            if (res.poolsCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/pools"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createPool"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreatePoolResponse;\nimport com.formance.formance_sdk.models.shared.PoolRequest;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            PoolRequest req = PoolRequest.builder()\n                .name(\"<value>\")\n                .accountIDs(List.of(\n                    \"<value>\"))\n                .build();\n\n            CreatePoolResponse res = sdk.payments().createPool()\n                .request(req)\n                .call();\n\n            if (res.poolResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/pools/{poolId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deletePool"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeletePoolRequest;\nimport com.formance.formance_sdk.models.operations.DeletePoolResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeletePoolRequest req = DeletePoolRequest.builder()\n                .poolId(\"XXX\")\n                .build();\n\n            DeletePoolResponse res = sdk.payments().deletePool()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/pools/{poolId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getPool"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetPoolRequest;\nimport com.formance.formance_sdk.models.operations.GetPoolResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetPoolRequest req = GetPoolRequest.builder()\n                .poolId(\"XXX\")\n                .build();\n\n            GetPoolResponse res = sdk.payments().getPool()\n                .request(req)\n                .call();\n\n            if (res.poolResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/pools/{poolId}/accounts"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "addAccountToPool"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.AddAccountToPoolRequest;\nimport com.formance.formance_sdk.models.operations.AddAccountToPoolResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            AddAccountToPoolRequest req = AddAccountToPoolRequest.builder()\n                .poolId(\"XXX\")\n                .addAccountToPoolRequest(com.formance.formance_sdk.models.shared.AddAccountToPoolRequest.builder()\n                    .accountID(\"<value>\")\n                    .build())\n                .build();\n\n            AddAccountToPoolResponse res = sdk.payments().addAccountToPool()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/pools/{poolId}/accounts/{accountId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "removeAccountFromPool"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.RemoveAccountFromPoolRequest;\nimport com.formance.formance_sdk.models.operations.RemoveAccountFromPoolResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            RemoveAccountFromPoolRequest req = RemoveAccountFromPoolRequest.builder()\n                .poolId(\"XXX\")\n                .accountId(\"XXX\")\n                .build();\n\n            RemoveAccountFromPoolResponse res = sdk.payments().removeAccountFromPool()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/pools/{poolId}/balances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getPoolBalances"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetPoolBalancesRequest;\nimport com.formance.formance_sdk.models.operations.GetPoolBalancesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.time.OffsetDateTime;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetPoolBalancesRequest req = GetPoolBalancesRequest.builder()\n                .poolId(\"XXX\")\n                .at(OffsetDateTime.parse(\"2023-05-05T06:40:23.018Z\"))\n                .build();\n\n            GetPoolBalancesResponse res = sdk.payments().getPoolBalances()\n                .request(req)\n                .call();\n\n            if (res.poolBalancesResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/transfer-initiations"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listTransferInitiations"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListTransferInitiationsRequest;\nimport com.formance.formance_sdk.models.operations.ListTransferInitiationsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListTransferInitiationsRequest req = ListTransferInitiationsRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .sort(List.of(\n                    \"date:asc\",\n                    \"status:desc\"))\n                .build();\n\n            ListTransferInitiationsResponse res = sdk.payments().listTransferInitiations()\n                .request(req)\n                .call();\n\n            if (res.transferInitiationsCursor().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/transfer-initiations"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createTransferInitiation"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateTransferInitiationResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.TransferInitiationRequest;\nimport com.formance.formance_sdk.models.shared.TransferInitiationRequestType;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            TransferInitiationRequest req = TransferInitiationRequest.builder()\n                .reference(\"XXX\")\n                .scheduledAt(OffsetDateTime.parse(\"2022-10-09T08:11:40.661Z\"))\n                .description(\"Multi-tiered incremental methodology\")\n                .sourceAccountID(\"<value>\")\n                .destinationAccountID(\"<value>\")\n                .type(TransferInitiationRequestType.TRANSFER)\n                .amount(new BigInteger(\"34071\"))\n                .asset(\"USD\")\n                .validated(false)\n                .build();\n\n            CreateTransferInitiationResponse res = sdk.payments().createTransferInitiation()\n                .request(req)\n                .call();\n\n            if (res.transferInitiationResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/transfer-initiations/{transferId}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deleteTransferInitiation"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeleteTransferInitiationRequest;\nimport com.formance.formance_sdk.models.operations.DeleteTransferInitiationResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeleteTransferInitiationRequest req = DeleteTransferInitiationRequest.builder()\n                .transferId(\"XXX\")\n                .build();\n\n            DeleteTransferInitiationResponse res = sdk.payments().deleteTransferInitiation()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/transfer-initiations/{transferId}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getTransferInitiation"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetTransferInitiationRequest;\nimport com.formance.formance_sdk.models.operations.GetTransferInitiationResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetTransferInitiationRequest req = GetTransferInitiationRequest.builder()\n                .transferId(\"XXX\")\n                .build();\n\n            GetTransferInitiationResponse res = sdk.payments().getTransferInitiation()\n                .request(req)\n                .call();\n\n            if (res.transferInitiationResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/transfer-initiations/{transferId}/retry"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "retryTransferInitiation"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.RetryTransferInitiationRequest;\nimport com.formance.formance_sdk.models.operations.RetryTransferInitiationResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            RetryTransferInitiationRequest req = RetryTransferInitiationRequest.builder()\n                .transferId(\"XXX\")\n                .build();\n\n            RetryTransferInitiationResponse res = sdk.payments().retryTransferInitiation()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/transfer-initiations/{transferId}/reverse"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "reverseTransferInitiation"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReverseTransferInitiationRequest;\nimport com.formance.formance_sdk.models.operations.ReverseTransferInitiationResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReverseTransferInitiationRequest req = ReverseTransferInitiationRequest.builder()\n                .transferId(\"XXX\")\n                .reverseTransferInitiationRequest(com.formance.formance_sdk.models.shared.ReverseTransferInitiationRequest.builder()\n                    .reference(\"XXX\")\n                    .description(\"Function-based stable hub\")\n                    .amount(new BigInteger(\"570526\"))\n                    .asset(\"USD\")\n                    .metadata(Map.ofEntries(\n                        Map.entry(\"key\", \"<value>\")))\n                    .build())\n                .build();\n\n            ReverseTransferInitiationResponse res = sdk.payments().reverseTransferInitiation()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/payments/transfer-initiations/{transferId}/status"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "udpateTransferInitiationStatus"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UdpateTransferInitiationStatusRequest;\nimport com.formance.formance_sdk.models.operations.UdpateTransferInitiationStatusResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport com.formance.formance_sdk.models.shared.Status;\nimport com.formance.formance_sdk.models.shared.UpdateTransferInitiationStatusRequest;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UdpateTransferInitiationStatusRequest req = UdpateTransferInitiationStatusRequest.builder()\n                .transferId(\"XXX\")\n                .updateTransferInitiationStatusRequest(UpdateTransferInitiationStatusRequest.builder()\n                    .status(Status.VALIDATED)\n                    .build())\n                .build();\n\n            UdpateTransferInitiationStatusResponse res = sdk.payments().udpateTransferInitiationStatus()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.PaymentsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "reconciliationgetServerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReconciliationgetServerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReconciliationgetServerInfoResponse res = sdk.reconciliation().reconciliationgetServerInfo()\n                .call();\n\n            if (res.serverInfo().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/policies"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listPolicies"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListPoliciesRequest;\nimport com.formance.formance_sdk.models.operations.ListPoliciesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListPoliciesRequest req = ListPoliciesRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            ListPoliciesResponse res = sdk.reconciliation().listPolicies()\n                .request(req)\n                .call();\n\n            if (res.policiesCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/policies"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createPolicy"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreatePolicyResponse;\nimport com.formance.formance_sdk.models.shared.PolicyRequest;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            PolicyRequest req = PolicyRequest.builder()\n                .name(\"XXX\")\n                .ledgerName(\"default\")\n                .ledgerQuery(Map.ofEntries(\n                    Map.entry(\"key\", \"<value>\")))\n                .paymentsPoolID(\"XXX\")\n                .build();\n\n            CreatePolicyResponse res = sdk.reconciliation().createPolicy()\n                .request(req)\n                .call();\n\n            if (res.policyResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/policies/{policyID}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deletePolicy"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeletePolicyRequest;\nimport com.formance.formance_sdk.models.operations.DeletePolicyResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeletePolicyRequest req = DeletePolicyRequest.builder()\n                .policyID(\"XXX\")\n                .build();\n\n            DeletePolicyResponse res = sdk.reconciliation().deletePolicy()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/policies/{policyID}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getPolicy"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetPolicyRequest;\nimport com.formance.formance_sdk.models.operations.GetPolicyResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetPolicyRequest req = GetPolicyRequest.builder()\n                .policyID(\"XXX\")\n                .build();\n\n            GetPolicyResponse res = sdk.reconciliation().getPolicy()\n                .request(req)\n                .call();\n\n            if (res.policyResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/policies/{policyID}/reconciliation"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "reconcile"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ReconcileRequest;\nimport com.formance.formance_sdk.models.operations.ReconcileResponse;\nimport com.formance.formance_sdk.models.shared.ReconciliationRequest;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.time.OffsetDateTime;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ReconcileRequest req = ReconcileRequest.builder()\n                .policyID(\"XXX\")\n                .reconciliationRequest(ReconciliationRequest.builder()\n                    .reconciledAtLedger(OffsetDateTime.parse(\"2021-01-01T00:00:00.000Z\"))\n                    .reconciledAtPayments(OffsetDateTime.parse(\"2021-01-01T00:00:00.000Z\"))\n                    .build())\n                .build();\n\n            ReconcileResponse res = sdk.reconciliation().reconcile()\n                .request(req)\n                .call();\n\n            if (res.reconciliationResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/reconciliations"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listReconciliations"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListReconciliationsRequest;\nimport com.formance.formance_sdk.models.operations.ListReconciliationsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListReconciliationsRequest req = ListReconciliationsRequest.builder()\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            ListReconciliationsResponse res = sdk.reconciliation().listReconciliations()\n                .request(req)\n                .call();\n\n            if (res.reconciliationsCursorResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/reconciliation/reconciliations/{reconciliationID}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getReconciliation"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetReconciliationRequest;\nimport com.formance.formance_sdk.models.operations.GetReconciliationResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetReconciliationRequest req = GetReconciliationRequest.builder()\n                .reconciliationID(\"XXX\")\n                .build();\n\n            GetReconciliationResponse res = sdk.reconciliation().getReconciliation()\n                .request(req)\n                .call();\n\n            if (res.reconciliationResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.ReconciliationErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/search/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "search"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.SearchResponse;\nimport com.formance.formance_sdk.models.shared.Query;\nimport com.formance.formance_sdk.models.shared.QueryRaw;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            Query req = Query.builder()\n                .ledgers(List.of(\n                    \"quickstart\"))\n                .after(List.of(\n                    \"users:002\"))\n                .terms(List.of(\n                    \"destination=central_bank1\"))\n                .sort(\"id:asc\")\n                .policy(\"OR\")\n                .cursor(\"YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=\")\n                .raw(QueryRaw.builder()\n                    .build())\n                .build();\n\n            SearchResponse res = sdk.search().search()\n                .request(req)\n                .call();\n\n            if (res.response().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/search/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "searchgetServerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.SearchgetServerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            SearchgetServerInfoResponse res = sdk.search().searchgetServerInfo()\n                .call();\n\n            if (res.serverInfo().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/_info"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "walletsgetServerInfo"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.WalletsgetServerInfoResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            WalletsgetServerInfoResponse res = sdk.wallets().walletsgetServerInfo()\n                .call();\n\n            if (res.serverInfo().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/holds"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getHolds"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetHoldsRequest;\nimport com.formance.formance_sdk.models.operations.GetHoldsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetHoldsRequest req = GetHoldsRequest.builder()\n                .pageSize(100L)\n                .walletID(\"wallet1\")\n                .metadata(Map.ofEntries(\n                    Map.entry(\"admin\", \"true\")))\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            GetHoldsResponse res = sdk.wallets().getHolds()\n                .request(req)\n                .call();\n\n            if (res.getHoldsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/holds/{holdID}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getHold"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetHoldRequest;\nimport com.formance.formance_sdk.models.operations.GetHoldResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetHoldRequest req = GetHoldRequest.builder()\n                .holdID(\"<value>\")\n                .build();\n\n            GetHoldResponse res = sdk.wallets().getHold()\n                .request(req)\n                .call();\n\n            if (res.getHoldResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/holds/{hold_id}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "confirmHold"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ConfirmHoldRequest;\nimport com.formance.formance_sdk.models.operations.ConfirmHoldResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ConfirmHoldRequest req = ConfirmHoldRequest.builder()\n                .holdId(\"<value>\")\n                .confirmHoldRequest(com.formance.formance_sdk.models.shared.ConfirmHoldRequest.builder()\n                    .amount(new BigInteger(\"100\"))\n                    .final_(true)\n                    .build())\n                .build();\n\n            ConfirmHoldResponse res = sdk.wallets().confirmHold()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/holds/{hold_id}/void"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "voidHold"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.VoidHoldRequest;\nimport com.formance.formance_sdk.models.operations.VoidHoldResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            VoidHoldRequest req = VoidHoldRequest.builder()\n                .holdId(\"<value>\")\n                .build();\n\n            VoidHoldResponse res = sdk.wallets().voidHold()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/transactions"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getTransactions"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetTransactionsRequest;\nimport com.formance.formance_sdk.models.operations.GetTransactionsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetTransactionsRequest req = GetTransactionsRequest.builder()\n                .pageSize(100L)\n                .walletID(\"wallet1\")\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .build();\n\n            GetTransactionsResponse res = sdk.wallets().getTransactions()\n                .request(req)\n                .call();\n\n            if (res.getTransactionsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listWallets"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListWalletsRequest;\nimport com.formance.formance_sdk.models.operations.ListWalletsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListWalletsRequest req = ListWalletsRequest.builder()\n                .name(\"wallet1\")\n                .metadata(Map.ofEntries(\n                    Map.entry(\"admin\", \"true\")))\n                .pageSize(100L)\n                .cursor(\"aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==\")\n                .expand(\"balances\")\n                .build();\n\n            ListWalletsResponse res = sdk.wallets().listWallets()\n                .request(req)\n                .call();\n\n            if (res.listWalletsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createWallet"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateWalletRequest;\nimport com.formance.formance_sdk.models.operations.CreateWalletResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreateWalletRequest req = CreateWalletRequest.builder()\n                .build();\n\n            CreateWalletResponse res = sdk.wallets().createWallet()\n                .request(req)\n                .call();\n\n            if (res.createWalletResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getWallet"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetWalletRequest;\nimport com.formance.formance_sdk.models.operations.GetWalletResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetWalletRequest req = GetWalletRequest.builder()\n                .id(\"<id>\")\n                .build();\n\n            GetWalletResponse res = sdk.wallets().getWallet()\n                .request(req)\n                .call();\n\n            if (res.getWalletResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "updateWallet"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.UpdateWalletRequest;\nimport com.formance.formance_sdk.models.operations.UpdateWalletResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            UpdateWalletRequest req = UpdateWalletRequest.builder()\n                .id(\"<id>\")\n                .build();\n\n            UpdateWalletResponse res = sdk.wallets().updateWallet()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}/balances"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "listBalances"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ListBalancesRequest;\nimport com.formance.formance_sdk.models.operations.ListBalancesResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ListBalancesRequest req = ListBalancesRequest.builder()\n                .id(\"<id>\")\n                .build();\n\n            ListBalancesResponse res = sdk.wallets().listBalances()\n                .request(req)\n                .call();\n\n            if (res.listBalancesResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}/balances"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "createBalance"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreateBalanceRequest;\nimport com.formance.formance_sdk.models.operations.CreateBalanceResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreateBalanceRequest req = CreateBalanceRequest.builder()\n                .id(\"<id>\")\n                .build();\n\n            CreateBalanceResponse res = sdk.wallets().createBalance()\n                .request(req)\n                .call();\n\n            if (res.createBalanceResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}/balances/{balanceName}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getBalance"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetBalanceRequest;\nimport com.formance.formance_sdk.models.operations.GetBalanceResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetBalanceRequest req = GetBalanceRequest.builder()\n                .id(\"<id>\")\n                .balanceName(\"<value>\")\n                .build();\n\n            GetBalanceResponse res = sdk.wallets().getBalance()\n                .request(req)\n                .call();\n\n            if (res.getBalanceResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}/credit"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "creditWallet"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.CreditWalletRequest;\nimport com.formance.formance_sdk.models.operations.CreditWalletResponse;\nimport com.formance.formance_sdk.models.shared.Monetary;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            CreditWalletRequest req = CreditWalletRequest.builder()\n                .id(\"<id>\")\n                .creditWalletRequest(com.formance.formance_sdk.models.shared.CreditWalletRequest.builder()\n                    .amount(Monetary.builder()\n                        .asset(\"<value>\")\n                        .amount(new BigInteger(\"201874\"))\n                        .build())\n                    .build())\n                .build();\n\n            CreditWalletResponse res = sdk.wallets().creditWallet()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}/debit"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "debitWallet"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DebitWalletRequest;\nimport com.formance.formance_sdk.models.operations.DebitWalletResponse;\nimport com.formance.formance_sdk.models.shared.Monetary;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.math.BigInteger;\nimport java.util.Map;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DebitWalletRequest req = DebitWalletRequest.builder()\n                .id(\"<id>\")\n                .debitWalletRequest(com.formance.formance_sdk.models.shared.DebitWalletRequest.builder()\n                    .amount(Monetary.builder()\n                        .asset(\"<value>\")\n                        .amount(new BigInteger(\"245256\"))\n                        .build())\n                    .metadata(Map.ofEntries(\n                        Map.entry(\"key\", \"<value>\")))\n                    .build())\n                .build();\n\n            DebitWalletResponse res = sdk.wallets().debitWallet()\n                .request(req)\n                .call();\n\n            if (res.debitWalletResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/wallets/wallets/{id}/summary"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getWalletSummary"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetWalletSummaryRequest;\nimport com.formance.formance_sdk.models.operations.GetWalletSummaryResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetWalletSummaryRequest req = GetWalletSummaryRequest.builder()\n                .id(\"<id>\")\n                .build();\n\n            GetWalletSummaryResponse res = sdk.wallets().getWalletSummary()\n                .request(req)\n                .call();\n\n            if (res.getWalletSummaryResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WalletsErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/webhooks/configs"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getManyConfigs"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetManyConfigsRequest;\nimport com.formance.formance_sdk.models.operations.GetManyConfigsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetManyConfigsRequest req = GetManyConfigsRequest.builder()\n                .id(\"4997257d-dfb6-445b-929c-cbe2ab182818\")\n                .endpoint(\"https://example.com\")\n                .build();\n\n            GetManyConfigsResponse res = sdk.webhooks().getManyConfigs()\n                .request(req)\n                .call();\n\n            if (res.configsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WebhooksErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/webhooks/configs"]["post"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "insertConfig"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.InsertConfigResponse;\nimport com.formance.formance_sdk.models.shared.ConfigUser;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ConfigUser req = ConfigUser.builder()\n                .endpoint(\"https://example.com\")\n                .eventTypes(List.of(\n                    \"TYPE1\",\n                    \"TYPE2\"))\n                .name(\"customer_payment\")\n                .secret(\"V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3\")\n                .build();\n\n            InsertConfigResponse res = sdk.webhooks().insertConfig()\n                .request(req)\n                .call();\n\n            if (res.configResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WebhooksErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/webhooks/configs/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deleteConfig"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeleteConfigRequest;\nimport com.formance.formance_sdk.models.operations.DeleteConfigResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeleteConfigRequest req = DeleteConfigRequest.builder()\n                .id(\"4997257d-dfb6-445b-929c-cbe2ab182818\")\n                .build();\n\n            DeleteConfigResponse res = sdk.webhooks().deleteConfig()\n                .request(req)\n                .call();\n\n            // handle response\n        } catch (com.formance.formance_sdk.models.errors.WebhooksErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/webhooks/configs/{id}/activate"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "activateConfig"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ActivateConfigRequest;\nimport com.formance.formance_sdk.models.operations.ActivateConfigResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ActivateConfigRequest req = ActivateConfigRequest.builder()\n                .id(\"4997257d-dfb6-445b-929c-cbe2ab182818\")\n                .build();\n\n            ActivateConfigResponse res = sdk.webhooks().activateConfig()\n                .request(req)\n                .call();\n\n            if (res.configResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WebhooksErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/webhooks/configs/{id}/deactivate"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "deactivateConfig"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.DeactivateConfigRequest;\nimport com.formance.formance_sdk.models.operations.DeactivateConfigResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            DeactivateConfigRequest req = DeactivateConfigRequest.builder()\n                .id(\"4997257d-dfb6-445b-929c-cbe2ab182818\")\n                .build();\n\n            DeactivateConfigResponse res = sdk.webhooks().deactivateConfig()\n                .request(req)\n                .call();\n\n            if (res.configResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WebhooksErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/webhooks/configs/{id}/secret/change"]["put"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "changeConfigSecret"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.ChangeConfigSecretRequest;\nimport com.formance.formance_sdk.models.operations.ChangeConfigSecretResponse;\nimport com.formance.formance_sdk.models.shared.ConfigChangeSecret;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            ChangeConfigSecretRequest req = ChangeConfigSecretRequest.builder()\n                .id(\"4997257d-dfb6-445b-929c-cbe2ab182818\")\n                .configChangeSecret(ConfigChangeSecret.builder()\n                    .secret(\"V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3\")\n                    .build())\n                .build();\n\n            ChangeConfigSecretResponse res = sdk.webhooks().changeConfigSecret()\n                .request(req)\n                .call();\n\n            if (res.configResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WebhooksErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/api/webhooks/configs/{id}/test"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "testConfig"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.TestConfigRequest;\nimport com.formance.formance_sdk.models.operations.TestConfigResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            TestConfigRequest req = TestConfigRequest.builder()\n                .id(\"4997257d-dfb6-445b-929c-cbe2ab182818\")\n                .build();\n\n            TestConfigResponse res = sdk.webhooks().testConfig()\n                .request(req)\n                .call();\n\n            if (res.attemptResponse().isPresent()) {\n                // handle response\n            }\n        } catch (com.formance.formance_sdk.models.errors.WebhooksErrorResponse e) {\n            // handle exception\n            throw e;\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"
  - target: $["paths"]["/versions"]["get"]
    update:
      "x-codeSamples":
        - "lang": "java"
          "label": "getVersions"
          "source": "package hello.world;\n\nimport com.formance.formance_sdk.SDK;\nimport com.formance.formance_sdk.models.errors.SDKError;\nimport com.formance.formance_sdk.models.operations.GetVersionsResponse;\nimport com.formance.formance_sdk.models.shared.Security;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n        try {\n            SDK sdk = SDK.builder()\n                .security(Security.builder()\n                    .authorization(\"<YOUR_AUTHORIZATION_HERE>\")\n                    .build())\n                .build();\n\n            GetVersionsResponse res = sdk.getVersions()\n                .call();\n\n            if (res.getVersionsResponse().isPresent()) {\n                // handle response\n            }\n        } catch (SDKError e) {\n            // handle exception\n            throw e;\n        } catch (Exception e) {\n            // handle exception\n            throw e;\n        }\n\n    }\n}"

/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.formance.formance_sdk.hooks;

//
// This file is written once by speakeasy code generation and 
// thereafter will not be overwritten by speakeasy updates. As a
// consequence any customization of this class will be preserved.
//

import com.formance.formance_sdk.utils.Helpers;
import com.formance.formance_sdk.utils.Hook;

import java.net.URI;
import java.net.URISyntaxException;
import java.net.http.HttpRequest;

public final class SDKHooks {

    private SDKHooks() {
        // prevent instantiation
    }

    private static URI unescapeColonsInPath(URI uri)  {
        String u = uri.toString();
        // ? can legally occur in fragment portion
        int fragmentLocation = u.indexOf("#");
        int withoutFragmentLength = fragmentLocation == -1 ? u.length() : fragmentLocation;
        String withoutFragment = u.substring(0, withoutFragmentLength);
        int queryLocation = withoutFragment.indexOf("?");
        int withoutQueryLength = queryLocation == -1 ? withoutFragment.length() : queryLocation;
        String withoutQuery = withoutFragment.substring(0, withoutQueryLength);
        String path = withoutQuery.replace("%3A", ":");
        try {
            return new URI(path + u.substring(withoutQueryLength));
        } catch (URISyntaxException e) {
            throw new RuntimeException(e);
        }
    }

    public static final void initialize(com.formance.formance_sdk.utils.Hooks hooks) {
        // register hooks here
        hooks.registerBeforeRequest(new Hook.BeforeRequest() {
            @Override
            public HttpRequest beforeRequest(Hook.BeforeRequestContext context, HttpRequest request) throws Exception {
                String uriRawPath = request.uri().getRawPath();

                if (uriRawPath.contains("%3A")){
                    URI newUri = unescapeColonsInPath(request.uri());
                    HttpRequest nextRequest =  Helpers.copy(request)
                            .uri(newUri)
                            .build();

                   return nextRequest;
                }

                return request;
            }
        });
        // for more information see
        // https://www.speakeasyapi.dev/docs/additional-features/sdk-hooks
    }
}

/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.formance.formance_sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.formance.formance_sdk.utils.SpeakeasyMetadata;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;


public class ListTriggersOccurrencesRequest {
    /**
     * The trigger id
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=triggerID")
    private String triggerID;

    @JsonCreator
    public ListTriggersOccurrencesRequest(
            String triggerID) {
        Utils.checkNotNull(triggerID, "triggerID");
        this.triggerID = triggerID;
    }

    /**
     * The trigger id
     */
    @JsonIgnore
    public String triggerID() {
        return triggerID;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The trigger id
     */
    public ListTriggersOccurrencesRequest withTriggerID(String triggerID) {
        Utils.checkNotNull(triggerID, "triggerID");
        this.triggerID = triggerID;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListTriggersOccurrencesRequest other = (ListTriggersOccurrencesRequest) o;
        return 
            Utils.enhancedDeepEquals(this.triggerID, other.triggerID);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            triggerID);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListTriggersOccurrencesRequest.class,
                "triggerID", triggerID);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String triggerID;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The trigger id
         */
        public Builder triggerID(String triggerID) {
            Utils.checkNotNull(triggerID, "triggerID");
            this.triggerID = triggerID;
            return this;
        }

        public ListTriggersOccurrencesRequest build() {

            return new ListTriggersOccurrencesRequest(
                triggerID);
        }

    }
}

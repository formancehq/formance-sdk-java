/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.formance.formance_sdk.models.operations;

import static com.formance.formance_sdk.operations.Operations.RequestOperation;

import com.formance.formance_sdk.SDKConfiguration;
import com.formance.formance_sdk.models.shared.ClientOptions;
import com.formance.formance_sdk.operations.CreateClient;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Exception;
import java.util.Optional;

public class CreateClientRequestBuilder {

    private Optional<? extends ClientOptions> request = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public CreateClientRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public CreateClientRequestBuilder request(ClientOptions request) {
        Utils.checkNotNull(request, "request");
        this.request = Optional.of(request);
        return this;
    }

    public CreateClientRequestBuilder request(Optional<? extends ClientOptions> request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public CreateClientResponse call() throws Exception {
        
        RequestOperation<Optional<? extends ClientOptions>, CreateClientResponse> operation
              = new CreateClient.Sync(sdkConfiguration);

        return operation.handleResponse(operation.doRequest(request));
    }
}

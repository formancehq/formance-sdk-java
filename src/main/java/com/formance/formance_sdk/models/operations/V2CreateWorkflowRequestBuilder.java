/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.formance.formance_sdk.models.operations;

import static com.formance.formance_sdk.operations.Operations.RequestOperation;

import com.formance.formance_sdk.SDKConfiguration;
import com.formance.formance_sdk.models.shared.V2WorkflowConfig;
import com.formance.formance_sdk.operations.V2CreateWorkflow;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Exception;
import java.util.Optional;

public class V2CreateWorkflowRequestBuilder {

    private Optional<? extends V2WorkflowConfig> request = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public V2CreateWorkflowRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public V2CreateWorkflowRequestBuilder request(V2WorkflowConfig request) {
        Utils.checkNotNull(request, "request");
        this.request = Optional.of(request);
        return this;
    }

    public V2CreateWorkflowRequestBuilder request(Optional<? extends V2WorkflowConfig> request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public V2CreateWorkflowResponse call() throws Exception {
        
        RequestOperation<Optional<? extends V2WorkflowConfig>, V2CreateWorkflowResponse> operation
              = new V2CreateWorkflow.Sync(sdkConfiguration);

        return operation.handleResponse(operation.doRequest(request));
    }
}

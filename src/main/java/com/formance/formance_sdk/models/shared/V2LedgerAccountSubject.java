/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class V2LedgerAccountSubject implements V2Subject {

    @JsonProperty("identifier")
    private String identifier;

    @JsonProperty("type")
    private String type;

    @JsonCreator
    public V2LedgerAccountSubject(
            @JsonProperty("identifier") String identifier,
            @JsonProperty("type") String type) {
        Utils.checkNotNull(identifier, "identifier");
        Utils.checkNotNull(type, "type");
        this.identifier = identifier;
        this.type = type;
    }

    @JsonIgnore
    public String identifier() {
        return identifier;
    }

    @JsonIgnore
    @Override
    public String type() {
        return Utils.discriminatorToString(type);
    }

    public final static Builder builder() {
        return new Builder();
    }

    public V2LedgerAccountSubject withIdentifier(String identifier) {
        Utils.checkNotNull(identifier, "identifier");
        this.identifier = identifier;
        return this;
    }

    public V2LedgerAccountSubject withType(String type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V2LedgerAccountSubject other = (V2LedgerAccountSubject) o;
        return 
            Objects.deepEquals(this.identifier, other.identifier) &&
            Objects.deepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            identifier,
            type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V2LedgerAccountSubject.class,
                "identifier", identifier,
                "type", type);
    }
    
    public final static class Builder {
 
        private String identifier;
 
        private String type;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder identifier(String identifier) {
            Utils.checkNotNull(identifier, "identifier");
            this.identifier = identifier;
            return this;
        }

        public Builder type(String type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }
        
        public V2LedgerAccountSubject build() {
            return new V2LedgerAccountSubject(
                identifier,
                type);
        }
    }
}


/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Objects;
import java.util.Optional;


public class V2WorkflowInstanceHistory {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    private Optional<String> error;

    @JsonProperty("input")
    private V2Stage input;

    @JsonProperty("name")
    private String name;

    @JsonProperty("startedAt")
    private OffsetDateTime startedAt;

    @JsonProperty("terminated")
    private boolean terminated;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminatedAt")
    private Optional<OffsetDateTime> terminatedAt;

    @JsonCreator
    public V2WorkflowInstanceHistory(
            @JsonProperty("error") Optional<String> error,
            @JsonProperty("input") V2Stage input,
            @JsonProperty("name") String name,
            @JsonProperty("startedAt") OffsetDateTime startedAt,
            @JsonProperty("terminated") boolean terminated,
            @JsonProperty("terminatedAt") Optional<OffsetDateTime> terminatedAt) {
        Utils.checkNotNull(error, "error");
        Utils.checkNotNull(input, "input");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(startedAt, "startedAt");
        Utils.checkNotNull(terminated, "terminated");
        Utils.checkNotNull(terminatedAt, "terminatedAt");
        this.error = error;
        this.input = input;
        this.name = name;
        this.startedAt = startedAt;
        this.terminated = terminated;
        this.terminatedAt = terminatedAt;
    }
    
    public V2WorkflowInstanceHistory(
            V2Stage input,
            String name,
            OffsetDateTime startedAt,
            boolean terminated) {
        this(Optional.empty(), input, name, startedAt, terminated, Optional.empty());
    }

    @JsonIgnore
    public Optional<String> error() {
        return error;
    }

    @JsonIgnore
    public V2Stage input() {
        return input;
    }

    @JsonIgnore
    public String name() {
        return name;
    }

    @JsonIgnore
    public OffsetDateTime startedAt() {
        return startedAt;
    }

    @JsonIgnore
    public boolean terminated() {
        return terminated;
    }

    @JsonIgnore
    public Optional<OffsetDateTime> terminatedAt() {
        return terminatedAt;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public V2WorkflowInstanceHistory withError(String error) {
        Utils.checkNotNull(error, "error");
        this.error = Optional.ofNullable(error);
        return this;
    }

    public V2WorkflowInstanceHistory withError(Optional<String> error) {
        Utils.checkNotNull(error, "error");
        this.error = error;
        return this;
    }

    public V2WorkflowInstanceHistory withInput(V2Stage input) {
        Utils.checkNotNull(input, "input");
        this.input = input;
        return this;
    }

    public V2WorkflowInstanceHistory withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public V2WorkflowInstanceHistory withStartedAt(OffsetDateTime startedAt) {
        Utils.checkNotNull(startedAt, "startedAt");
        this.startedAt = startedAt;
        return this;
    }

    public V2WorkflowInstanceHistory withTerminated(boolean terminated) {
        Utils.checkNotNull(terminated, "terminated");
        this.terminated = terminated;
        return this;
    }

    public V2WorkflowInstanceHistory withTerminatedAt(OffsetDateTime terminatedAt) {
        Utils.checkNotNull(terminatedAt, "terminatedAt");
        this.terminatedAt = Optional.ofNullable(terminatedAt);
        return this;
    }

    public V2WorkflowInstanceHistory withTerminatedAt(Optional<OffsetDateTime> terminatedAt) {
        Utils.checkNotNull(terminatedAt, "terminatedAt");
        this.terminatedAt = terminatedAt;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V2WorkflowInstanceHistory other = (V2WorkflowInstanceHistory) o;
        return 
            Objects.deepEquals(this.error, other.error) &&
            Objects.deepEquals(this.input, other.input) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.startedAt, other.startedAt) &&
            Objects.deepEquals(this.terminated, other.terminated) &&
            Objects.deepEquals(this.terminatedAt, other.terminatedAt);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            error,
            input,
            name,
            startedAt,
            terminated,
            terminatedAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V2WorkflowInstanceHistory.class,
                "error", error,
                "input", input,
                "name", name,
                "startedAt", startedAt,
                "terminated", terminated,
                "terminatedAt", terminatedAt);
    }
    
    public final static class Builder {
 
        private Optional<String> error = Optional.empty();
 
        private V2Stage input;
 
        private String name;
 
        private OffsetDateTime startedAt;
 
        private Boolean terminated;
 
        private Optional<OffsetDateTime> terminatedAt = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder error(String error) {
            Utils.checkNotNull(error, "error");
            this.error = Optional.ofNullable(error);
            return this;
        }

        public Builder error(Optional<String> error) {
            Utils.checkNotNull(error, "error");
            this.error = error;
            return this;
        }

        public Builder input(V2Stage input) {
            Utils.checkNotNull(input, "input");
            this.input = input;
            return this;
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder startedAt(OffsetDateTime startedAt) {
            Utils.checkNotNull(startedAt, "startedAt");
            this.startedAt = startedAt;
            return this;
        }

        public Builder terminated(boolean terminated) {
            Utils.checkNotNull(terminated, "terminated");
            this.terminated = terminated;
            return this;
        }

        public Builder terminatedAt(OffsetDateTime terminatedAt) {
            Utils.checkNotNull(terminatedAt, "terminatedAt");
            this.terminatedAt = Optional.ofNullable(terminatedAt);
            return this;
        }

        public Builder terminatedAt(Optional<OffsetDateTime> terminatedAt) {
            Utils.checkNotNull(terminatedAt, "terminatedAt");
            this.terminatedAt = terminatedAt;
            return this;
        }
        
        public V2WorkflowInstanceHistory build() {
            return new V2WorkflowInstanceHistory(
                error,
                input,
                name,
                startedAt,
                terminated,
                terminatedAt);
        }
    }
}


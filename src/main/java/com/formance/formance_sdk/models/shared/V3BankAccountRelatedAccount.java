/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Objects;


public class V3BankAccountRelatedAccount {

    @JsonProperty("accountID")
    private String accountID;

    @JsonProperty("createdAt")
    private OffsetDateTime createdAt;

    @JsonCreator
    public V3BankAccountRelatedAccount(
            @JsonProperty("accountID") String accountID,
            @JsonProperty("createdAt") OffsetDateTime createdAt) {
        Utils.checkNotNull(accountID, "accountID");
        Utils.checkNotNull(createdAt, "createdAt");
        this.accountID = accountID;
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public String accountID() {
        return accountID;
    }

    @JsonIgnore
    public OffsetDateTime createdAt() {
        return createdAt;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public V3BankAccountRelatedAccount withAccountID(String accountID) {
        Utils.checkNotNull(accountID, "accountID");
        this.accountID = accountID;
        return this;
    }

    public V3BankAccountRelatedAccount withCreatedAt(OffsetDateTime createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = createdAt;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3BankAccountRelatedAccount other = (V3BankAccountRelatedAccount) o;
        return 
            Objects.deepEquals(this.accountID, other.accountID) &&
            Objects.deepEquals(this.createdAt, other.createdAt);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            accountID,
            createdAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3BankAccountRelatedAccount.class,
                "accountID", accountID,
                "createdAt", createdAt);
    }
    
    public final static class Builder {
 
        private String accountID;
 
        private OffsetDateTime createdAt;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder accountID(String accountID) {
            Utils.checkNotNull(accountID, "accountID");
            this.accountID = accountID;
            return this;
        }

        public Builder createdAt(OffsetDateTime createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = createdAt;
            return this;
        }
        
        public V3BankAccountRelatedAccount build() {
            return new V3BankAccountRelatedAccount(
                accountID,
                createdAt);
        }
    }
}


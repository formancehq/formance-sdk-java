/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.formance.formance_sdk.models.shared;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class V3ReversePaymentInitiationResponseData {

    /**
     * Related payment initiation reversal object ID created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentInitiationReversalID")
    private Optional<String> paymentInitiationReversalID;

    /**
     * Since this call is asynchronous, the response will contain the ID of the task that was created to reverse the payment initiation. You can use the task API to check the status of the task and get the resulting payment ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskID")
    private Optional<String> taskID;

    @JsonCreator
    public V3ReversePaymentInitiationResponseData(
            @JsonProperty("paymentInitiationReversalID") Optional<String> paymentInitiationReversalID,
            @JsonProperty("taskID") Optional<String> taskID) {
        Utils.checkNotNull(paymentInitiationReversalID, "paymentInitiationReversalID");
        Utils.checkNotNull(taskID, "taskID");
        this.paymentInitiationReversalID = paymentInitiationReversalID;
        this.taskID = taskID;
    }
    
    public V3ReversePaymentInitiationResponseData() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * Related payment initiation reversal object ID created.
     * 
     */
    @JsonIgnore
    public Optional<String> paymentInitiationReversalID() {
        return paymentInitiationReversalID;
    }

    /**
     * Since this call is asynchronous, the response will contain the ID of the task that was created to reverse the payment initiation. You can use the task API to check the status of the task and get the resulting payment ID.
     * 
     */
    @JsonIgnore
    public Optional<String> taskID() {
        return taskID;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Related payment initiation reversal object ID created.
     * 
     */
    public V3ReversePaymentInitiationResponseData withPaymentInitiationReversalID(String paymentInitiationReversalID) {
        Utils.checkNotNull(paymentInitiationReversalID, "paymentInitiationReversalID");
        this.paymentInitiationReversalID = Optional.ofNullable(paymentInitiationReversalID);
        return this;
    }

    /**
     * Related payment initiation reversal object ID created.
     * 
     */
    public V3ReversePaymentInitiationResponseData withPaymentInitiationReversalID(Optional<String> paymentInitiationReversalID) {
        Utils.checkNotNull(paymentInitiationReversalID, "paymentInitiationReversalID");
        this.paymentInitiationReversalID = paymentInitiationReversalID;
        return this;
    }

    /**
     * Since this call is asynchronous, the response will contain the ID of the task that was created to reverse the payment initiation. You can use the task API to check the status of the task and get the resulting payment ID.
     * 
     */
    public V3ReversePaymentInitiationResponseData withTaskID(String taskID) {
        Utils.checkNotNull(taskID, "taskID");
        this.taskID = Optional.ofNullable(taskID);
        return this;
    }

    /**
     * Since this call is asynchronous, the response will contain the ID of the task that was created to reverse the payment initiation. You can use the task API to check the status of the task and get the resulting payment ID.
     * 
     */
    public V3ReversePaymentInitiationResponseData withTaskID(Optional<String> taskID) {
        Utils.checkNotNull(taskID, "taskID");
        this.taskID = taskID;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3ReversePaymentInitiationResponseData other = (V3ReversePaymentInitiationResponseData) o;
        return 
            Objects.deepEquals(this.paymentInitiationReversalID, other.paymentInitiationReversalID) &&
            Objects.deepEquals(this.taskID, other.taskID);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            paymentInitiationReversalID,
            taskID);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3ReversePaymentInitiationResponseData.class,
                "paymentInitiationReversalID", paymentInitiationReversalID,
                "taskID", taskID);
    }
    
    public final static class Builder {
 
        private Optional<String> paymentInitiationReversalID = Optional.empty();
 
        private Optional<String> taskID = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Related payment initiation reversal object ID created.
         * 
         */
        public Builder paymentInitiationReversalID(String paymentInitiationReversalID) {
            Utils.checkNotNull(paymentInitiationReversalID, "paymentInitiationReversalID");
            this.paymentInitiationReversalID = Optional.ofNullable(paymentInitiationReversalID);
            return this;
        }

        /**
         * Related payment initiation reversal object ID created.
         * 
         */
        public Builder paymentInitiationReversalID(Optional<String> paymentInitiationReversalID) {
            Utils.checkNotNull(paymentInitiationReversalID, "paymentInitiationReversalID");
            this.paymentInitiationReversalID = paymentInitiationReversalID;
            return this;
        }

        /**
         * Since this call is asynchronous, the response will contain the ID of the task that was created to reverse the payment initiation. You can use the task API to check the status of the task and get the resulting payment ID.
         * 
         */
        public Builder taskID(String taskID) {
            Utils.checkNotNull(taskID, "taskID");
            this.taskID = Optional.ofNullable(taskID);
            return this;
        }

        /**
         * Since this call is asynchronous, the response will contain the ID of the task that was created to reverse the payment initiation. You can use the task API to check the status of the task and get the resulting payment ID.
         * 
         */
        public Builder taskID(Optional<String> taskID) {
            Utils.checkNotNull(taskID, "taskID");
            this.taskID = taskID;
            return this;
        }
        
        public V3ReversePaymentInitiationResponseData build() {
            return new V3ReversePaymentInitiationResponseData(
                paymentInitiationReversalID,
                taskID);
        }
    }
}


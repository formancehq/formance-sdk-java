/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.formance.formance_sdk.models.shared;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class V3BankAccount {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    private JsonNullable<String> accountNumber;

    @JsonProperty("createdAt")
    private OffsetDateTime createdAt;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    private JsonNullable<String> iban;

    @JsonProperty("id")
    private String id;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    private JsonNullable<? extends Map<String, String>> metadata;

    @JsonProperty("name")
    private String name;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedAccounts")
    private Optional<? extends List<V3BankAccountRelatedAccount>> relatedAccounts;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("swiftBicCode")
    private JsonNullable<String> swiftBicCode;

    @JsonCreator
    public V3BankAccount(
            @JsonProperty("accountNumber") JsonNullable<String> accountNumber,
            @JsonProperty("createdAt") OffsetDateTime createdAt,
            @JsonProperty("iban") JsonNullable<String> iban,
            @JsonProperty("id") String id,
            @JsonProperty("metadata") JsonNullable<? extends Map<String, String>> metadata,
            @JsonProperty("name") String name,
            @JsonProperty("relatedAccounts") Optional<? extends List<V3BankAccountRelatedAccount>> relatedAccounts,
            @JsonProperty("swiftBicCode") JsonNullable<String> swiftBicCode) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        Utils.checkNotNull(createdAt, "createdAt");
        Utils.checkNotNull(iban, "iban");
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(metadata, "metadata");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(relatedAccounts, "relatedAccounts");
        Utils.checkNotNull(swiftBicCode, "swiftBicCode");
        this.accountNumber = accountNumber;
        this.createdAt = createdAt;
        this.iban = iban;
        this.id = id;
        this.metadata = metadata;
        this.name = name;
        this.relatedAccounts = relatedAccounts;
        this.swiftBicCode = swiftBicCode;
    }
    
    public V3BankAccount(
            OffsetDateTime createdAt,
            String id,
            String name) {
        this(JsonNullable.undefined(), createdAt, JsonNullable.undefined(), id, JsonNullable.undefined(), name, Optional.empty(), JsonNullable.undefined());
    }

    @JsonIgnore
    public JsonNullable<String> accountNumber() {
        return accountNumber;
    }

    @JsonIgnore
    public OffsetDateTime createdAt() {
        return createdAt;
    }

    @JsonIgnore
    public JsonNullable<String> iban() {
        return iban;
    }

    @JsonIgnore
    public String id() {
        return id;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, String>> metadata() {
        return (JsonNullable<Map<String, String>>) metadata;
    }

    @JsonIgnore
    public String name() {
        return name;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<V3BankAccountRelatedAccount>> relatedAccounts() {
        return (Optional<List<V3BankAccountRelatedAccount>>) relatedAccounts;
    }

    @JsonIgnore
    public JsonNullable<String> swiftBicCode() {
        return swiftBicCode;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public V3BankAccount withAccountNumber(String accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = JsonNullable.of(accountNumber);
        return this;
    }

    public V3BankAccount withAccountNumber(JsonNullable<String> accountNumber) {
        Utils.checkNotNull(accountNumber, "accountNumber");
        this.accountNumber = accountNumber;
        return this;
    }

    public V3BankAccount withCreatedAt(OffsetDateTime createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = createdAt;
        return this;
    }

    public V3BankAccount withIban(String iban) {
        Utils.checkNotNull(iban, "iban");
        this.iban = JsonNullable.of(iban);
        return this;
    }

    public V3BankAccount withIban(JsonNullable<String> iban) {
        Utils.checkNotNull(iban, "iban");
        this.iban = iban;
        return this;
    }

    public V3BankAccount withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public V3BankAccount withMetadata(Map<String, String> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = JsonNullable.of(metadata);
        return this;
    }

    public V3BankAccount withMetadata(JsonNullable<? extends Map<String, String>> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = metadata;
        return this;
    }

    public V3BankAccount withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public V3BankAccount withRelatedAccounts(List<V3BankAccountRelatedAccount> relatedAccounts) {
        Utils.checkNotNull(relatedAccounts, "relatedAccounts");
        this.relatedAccounts = Optional.ofNullable(relatedAccounts);
        return this;
    }

    public V3BankAccount withRelatedAccounts(Optional<? extends List<V3BankAccountRelatedAccount>> relatedAccounts) {
        Utils.checkNotNull(relatedAccounts, "relatedAccounts");
        this.relatedAccounts = relatedAccounts;
        return this;
    }

    public V3BankAccount withSwiftBicCode(String swiftBicCode) {
        Utils.checkNotNull(swiftBicCode, "swiftBicCode");
        this.swiftBicCode = JsonNullable.of(swiftBicCode);
        return this;
    }

    public V3BankAccount withSwiftBicCode(JsonNullable<String> swiftBicCode) {
        Utils.checkNotNull(swiftBicCode, "swiftBicCode");
        this.swiftBicCode = swiftBicCode;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3BankAccount other = (V3BankAccount) o;
        return 
            Objects.deepEquals(this.accountNumber, other.accountNumber) &&
            Objects.deepEquals(this.createdAt, other.createdAt) &&
            Objects.deepEquals(this.iban, other.iban) &&
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.metadata, other.metadata) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.relatedAccounts, other.relatedAccounts) &&
            Objects.deepEquals(this.swiftBicCode, other.swiftBicCode);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            accountNumber,
            createdAt,
            iban,
            id,
            metadata,
            name,
            relatedAccounts,
            swiftBicCode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3BankAccount.class,
                "accountNumber", accountNumber,
                "createdAt", createdAt,
                "iban", iban,
                "id", id,
                "metadata", metadata,
                "name", name,
                "relatedAccounts", relatedAccounts,
                "swiftBicCode", swiftBicCode);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> accountNumber = JsonNullable.undefined();
 
        private OffsetDateTime createdAt;
 
        private JsonNullable<String> iban = JsonNullable.undefined();
 
        private String id;
 
        private JsonNullable<? extends Map<String, String>> metadata = JsonNullable.undefined();
 
        private String name;
 
        private Optional<? extends List<V3BankAccountRelatedAccount>> relatedAccounts = Optional.empty();
 
        private JsonNullable<String> swiftBicCode = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder accountNumber(String accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = JsonNullable.of(accountNumber);
            return this;
        }

        public Builder accountNumber(JsonNullable<String> accountNumber) {
            Utils.checkNotNull(accountNumber, "accountNumber");
            this.accountNumber = accountNumber;
            return this;
        }

        public Builder createdAt(OffsetDateTime createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = createdAt;
            return this;
        }

        public Builder iban(String iban) {
            Utils.checkNotNull(iban, "iban");
            this.iban = JsonNullable.of(iban);
            return this;
        }

        public Builder iban(JsonNullable<String> iban) {
            Utils.checkNotNull(iban, "iban");
            this.iban = iban;
            return this;
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        public Builder metadata(Map<String, String> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = JsonNullable.of(metadata);
            return this;
        }

        public Builder metadata(JsonNullable<? extends Map<String, String>> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = metadata;
            return this;
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder relatedAccounts(List<V3BankAccountRelatedAccount> relatedAccounts) {
            Utils.checkNotNull(relatedAccounts, "relatedAccounts");
            this.relatedAccounts = Optional.ofNullable(relatedAccounts);
            return this;
        }

        public Builder relatedAccounts(Optional<? extends List<V3BankAccountRelatedAccount>> relatedAccounts) {
            Utils.checkNotNull(relatedAccounts, "relatedAccounts");
            this.relatedAccounts = relatedAccounts;
            return this;
        }

        public Builder swiftBicCode(String swiftBicCode) {
            Utils.checkNotNull(swiftBicCode, "swiftBicCode");
            this.swiftBicCode = JsonNullable.of(swiftBicCode);
            return this;
        }

        public Builder swiftBicCode(JsonNullable<String> swiftBicCode) {
            Utils.checkNotNull(swiftBicCode, "swiftBicCode");
            this.swiftBicCode = swiftBicCode;
            return this;
        }
        
        public V3BankAccount build() {
            return new V3BankAccount(
                accountNumber,
                createdAt,
                iban,
                id,
                metadata,
                name,
                relatedAccounts,
                swiftBicCode);
        }
    }
}


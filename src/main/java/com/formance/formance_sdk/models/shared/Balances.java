/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class Balances {

    @JsonProperty("main")
    private V2AssetHolder main;

    @JsonCreator
    public Balances(
            @JsonProperty("main") V2AssetHolder main) {
        Utils.checkNotNull(main, "main");
        this.main = main;
    }

    @JsonIgnore
    public V2AssetHolder main() {
        return main;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public Balances withMain(V2AssetHolder main) {
        Utils.checkNotNull(main, "main");
        this.main = main;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Balances other = (Balances) o;
        return 
            Objects.deepEquals(this.main, other.main);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            main);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Balances.class,
                "main", main);
    }
    
    public final static class Builder {
 
        private V2AssetHolder main;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder main(V2AssetHolder main) {
            Utils.checkNotNull(main, "main");
            this.main = main;
            return this;
        }
        
        public Balances build() {
            return new Balances(
                main);
        }
    }
}


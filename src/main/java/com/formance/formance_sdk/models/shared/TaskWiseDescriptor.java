/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;


public class TaskWiseDescriptor {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    private Optional<String> key;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private Optional<String> name;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profileID")
    private Optional<Long> profileID;

    @JsonCreator
    public TaskWiseDescriptor(
            @JsonProperty("key") Optional<String> key,
            @JsonProperty("name") Optional<String> name,
            @JsonProperty("profileID") Optional<Long> profileID) {
        Utils.checkNotNull(key, "key");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(profileID, "profileID");
        this.key = key;
        this.name = name;
        this.profileID = profileID;
    }
    
    public TaskWiseDescriptor() {
        this(Optional.empty(), Optional.empty(), Optional.empty());
    }

    @JsonIgnore
    public Optional<String> key() {
        return key;
    }

    @JsonIgnore
    public Optional<String> name() {
        return name;
    }

    @JsonIgnore
    public Optional<Long> profileID() {
        return profileID;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TaskWiseDescriptor withKey(String key) {
        Utils.checkNotNull(key, "key");
        this.key = Optional.ofNullable(key);
        return this;
    }

    public TaskWiseDescriptor withKey(Optional<String> key) {
        Utils.checkNotNull(key, "key");
        this.key = key;
        return this;
    }

    public TaskWiseDescriptor withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = Optional.ofNullable(name);
        return this;
    }

    public TaskWiseDescriptor withName(Optional<String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    public TaskWiseDescriptor withProfileID(long profileID) {
        Utils.checkNotNull(profileID, "profileID");
        this.profileID = Optional.ofNullable(profileID);
        return this;
    }

    public TaskWiseDescriptor withProfileID(Optional<Long> profileID) {
        Utils.checkNotNull(profileID, "profileID");
        this.profileID = profileID;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TaskWiseDescriptor other = (TaskWiseDescriptor) o;
        return 
            Objects.deepEquals(this.key, other.key) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.profileID, other.profileID);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            key,
            name,
            profileID);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TaskWiseDescriptor.class,
                "key", key,
                "name", name,
                "profileID", profileID);
    }
    
    public final static class Builder {
 
        private Optional<String> key = Optional.empty();
 
        private Optional<String> name = Optional.empty();
 
        private Optional<Long> profileID = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder key(String key) {
            Utils.checkNotNull(key, "key");
            this.key = Optional.ofNullable(key);
            return this;
        }

        public Builder key(Optional<String> key) {
            Utils.checkNotNull(key, "key");
            this.key = key;
            return this;
        }

        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = Optional.ofNullable(name);
            return this;
        }

        public Builder name(Optional<String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public Builder profileID(long profileID) {
            Utils.checkNotNull(profileID, "profileID");
            this.profileID = Optional.ofNullable(profileID);
            return this;
        }

        public Builder profileID(Optional<Long> profileID) {
            Utils.checkNotNull(profileID, "profileID");
            this.profileID = profileID;
            return this;
        }
        
        public TaskWiseDescriptor build() {
            return new TaskWiseDescriptor(
                key,
                name,
                profileID);
        }
    }
}


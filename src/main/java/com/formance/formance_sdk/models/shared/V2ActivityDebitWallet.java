/* 
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.formance.formance_sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;

public class V2ActivityDebitWallet {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    private Optional<? extends V2DebitWalletRequest> data;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Optional<? extends String> id;

    @JsonCreator
    public V2ActivityDebitWallet(
            @JsonProperty("data") Optional<? extends V2DebitWalletRequest> data,
            @JsonProperty("id") Optional<? extends String> id) {
        Utils.checkNotNull(data, "data");
        Utils.checkNotNull(id, "id");
        this.data = data;
        this.id = id;
    }
    
    public V2ActivityDebitWallet() {
        this(Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<V2DebitWalletRequest> data() {
        return (Optional<V2DebitWalletRequest>) data;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<String> id() {
        return (Optional<String>) id;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public V2ActivityDebitWallet withData(V2DebitWalletRequest data) {
        Utils.checkNotNull(data, "data");
        this.data = Optional.ofNullable(data);
        return this;
    }

    public V2ActivityDebitWallet withData(Optional<? extends V2DebitWalletRequest> data) {
        Utils.checkNotNull(data, "data");
        this.data = data;
        return this;
    }

    public V2ActivityDebitWallet withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }

    public V2ActivityDebitWallet withId(Optional<? extends String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V2ActivityDebitWallet other = (V2ActivityDebitWallet) o;
        return 
            java.util.Objects.deepEquals(this.data, other.data) &&
            java.util.Objects.deepEquals(this.id, other.id);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            data,
            id);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V2ActivityDebitWallet.class,
                "data", data,
                "id", id);
    }
    
    public final static class Builder {
 
        private Optional<? extends V2DebitWalletRequest> data = Optional.empty();
 
        private Optional<? extends String> id = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder data(V2DebitWalletRequest data) {
            Utils.checkNotNull(data, "data");
            this.data = Optional.ofNullable(data);
            return this;
        }

        public Builder data(Optional<? extends V2DebitWalletRequest> data) {
            Utils.checkNotNull(data, "data");
            this.data = data;
            return this;
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        public Builder id(Optional<? extends String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }
        
        public V2ActivityDebitWallet build() {
            return new V2ActivityDebitWallet(
                data,
                id);
        }
    }
}


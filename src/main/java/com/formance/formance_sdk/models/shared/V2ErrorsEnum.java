/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.formance.formance_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public enum V2ErrorsEnum {
    INTERNAL("INTERNAL"),
    INSUFFICIENT_FUND("INSUFFICIENT_FUND"),
    VALIDATION("VALIDATION"),
    CONFLICT("CONFLICT"),
    COMPILATION_FAILED("COMPILATION_FAILED"),
    METADATA_OVERRIDE("METADATA_OVERRIDE"),
    NOT_FOUND("NOT_FOUND"),
    REVERT_OCCURRING("REVERT_OCCURRING"),
    ALREADY_REVERT("ALREADY_REVERT"),
    NO_POSTINGS("NO_POSTINGS"),
    LEDGER_NOT_FOUND("LEDGER_NOT_FOUND"),
    IMPORT("IMPORT"),
    TIMEOUT("TIMEOUT"),
    BULK_SIZE_EXCEEDED("BULK_SIZE_EXCEEDED"),
    INTERPRETER_PARSE("INTERPRETER_PARSE"),
    INTERPRETER_RUNTIME("INTERPRETER_RUNTIME"),
    LEDGER_ALREADY_EXISTS("LEDGER_ALREADY_EXISTS"),
    OUTDATED_SCHEMA("OUTDATED_SCHEMA");

    @JsonValue
    private final String value;

    private V2ErrorsEnum(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<V2ErrorsEnum> fromValue(String value) {
        for (V2ErrorsEnum o: V2ErrorsEnum.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}


/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.formance.formance_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class V3CreatePaymentServiceUserRequest {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    private Optional<? extends V3AddressRequest> address;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountIDs")
    private JsonNullable<? extends List<String>> bankAccountIDs;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactDetails")
    private Optional<? extends V3ContactDetailsRequest> contactDetails;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    private JsonNullable<? extends Map<String, String>> metadata;


    @JsonProperty("name")
    private String name;

    @JsonCreator
    public V3CreatePaymentServiceUserRequest(
            @JsonProperty("address") Optional<? extends V3AddressRequest> address,
            @JsonProperty("bankAccountIDs") JsonNullable<? extends List<String>> bankAccountIDs,
            @JsonProperty("contactDetails") Optional<? extends V3ContactDetailsRequest> contactDetails,
            @JsonProperty("metadata") JsonNullable<? extends Map<String, String>> metadata,
            @JsonProperty("name") String name) {
        Utils.checkNotNull(address, "address");
        Utils.checkNotNull(bankAccountIDs, "bankAccountIDs");
        Utils.checkNotNull(contactDetails, "contactDetails");
        Utils.checkNotNull(metadata, "metadata");
        Utils.checkNotNull(name, "name");
        this.address = address;
        this.bankAccountIDs = bankAccountIDs;
        this.contactDetails = contactDetails;
        this.metadata = metadata;
        this.name = name;
    }
    
    public V3CreatePaymentServiceUserRequest(
            String name) {
        this(Optional.empty(), JsonNullable.undefined(), Optional.empty(),
            JsonNullable.undefined(), name);
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<V3AddressRequest> address() {
        return (Optional<V3AddressRequest>) address;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<String>> bankAccountIDs() {
        return (JsonNullable<List<String>>) bankAccountIDs;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<V3ContactDetailsRequest> contactDetails() {
        return (Optional<V3ContactDetailsRequest>) contactDetails;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Map<String, String>> metadata() {
        return (JsonNullable<Map<String, String>>) metadata;
    }

    @JsonIgnore
    public String name() {
        return name;
    }

    public static Builder builder() {
        return new Builder();
    }


    public V3CreatePaymentServiceUserRequest withAddress(V3AddressRequest address) {
        Utils.checkNotNull(address, "address");
        this.address = Optional.ofNullable(address);
        return this;
    }


    public V3CreatePaymentServiceUserRequest withAddress(Optional<? extends V3AddressRequest> address) {
        Utils.checkNotNull(address, "address");
        this.address = address;
        return this;
    }

    public V3CreatePaymentServiceUserRequest withBankAccountIDs(List<String> bankAccountIDs) {
        Utils.checkNotNull(bankAccountIDs, "bankAccountIDs");
        this.bankAccountIDs = JsonNullable.of(bankAccountIDs);
        return this;
    }

    public V3CreatePaymentServiceUserRequest withBankAccountIDs(JsonNullable<? extends List<String>> bankAccountIDs) {
        Utils.checkNotNull(bankAccountIDs, "bankAccountIDs");
        this.bankAccountIDs = bankAccountIDs;
        return this;
    }

    public V3CreatePaymentServiceUserRequest withContactDetails(V3ContactDetailsRequest contactDetails) {
        Utils.checkNotNull(contactDetails, "contactDetails");
        this.contactDetails = Optional.ofNullable(contactDetails);
        return this;
    }


    public V3CreatePaymentServiceUserRequest withContactDetails(Optional<? extends V3ContactDetailsRequest> contactDetails) {
        Utils.checkNotNull(contactDetails, "contactDetails");
        this.contactDetails = contactDetails;
        return this;
    }

    public V3CreatePaymentServiceUserRequest withMetadata(Map<String, String> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = JsonNullable.of(metadata);
        return this;
    }

    public V3CreatePaymentServiceUserRequest withMetadata(JsonNullable<? extends Map<String, String>> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = metadata;
        return this;
    }

    public V3CreatePaymentServiceUserRequest withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V3CreatePaymentServiceUserRequest other = (V3CreatePaymentServiceUserRequest) o;
        return 
            Utils.enhancedDeepEquals(this.address, other.address) &&
            Utils.enhancedDeepEquals(this.bankAccountIDs, other.bankAccountIDs) &&
            Utils.enhancedDeepEquals(this.contactDetails, other.contactDetails) &&
            Utils.enhancedDeepEquals(this.metadata, other.metadata) &&
            Utils.enhancedDeepEquals(this.name, other.name);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            address, bankAccountIDs, contactDetails,
            metadata, name);
    }
    
    @Override
    public String toString() {
        return Utils.toString(V3CreatePaymentServiceUserRequest.class,
                "address", address,
                "bankAccountIDs", bankAccountIDs,
                "contactDetails", contactDetails,
                "metadata", metadata,
                "name", name);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends V3AddressRequest> address = Optional.empty();

        private JsonNullable<? extends List<String>> bankAccountIDs = JsonNullable.undefined();

        private Optional<? extends V3ContactDetailsRequest> contactDetails = Optional.empty();

        private JsonNullable<? extends Map<String, String>> metadata = JsonNullable.undefined();

        private String name;

        private Builder() {
          // force use of static builder() method
        }


        public Builder address(V3AddressRequest address) {
            Utils.checkNotNull(address, "address");
            this.address = Optional.ofNullable(address);
            return this;
        }

        public Builder address(Optional<? extends V3AddressRequest> address) {
            Utils.checkNotNull(address, "address");
            this.address = address;
            return this;
        }


        public Builder bankAccountIDs(List<String> bankAccountIDs) {
            Utils.checkNotNull(bankAccountIDs, "bankAccountIDs");
            this.bankAccountIDs = JsonNullable.of(bankAccountIDs);
            return this;
        }

        public Builder bankAccountIDs(JsonNullable<? extends List<String>> bankAccountIDs) {
            Utils.checkNotNull(bankAccountIDs, "bankAccountIDs");
            this.bankAccountIDs = bankAccountIDs;
            return this;
        }


        public Builder contactDetails(V3ContactDetailsRequest contactDetails) {
            Utils.checkNotNull(contactDetails, "contactDetails");
            this.contactDetails = Optional.ofNullable(contactDetails);
            return this;
        }

        public Builder contactDetails(Optional<? extends V3ContactDetailsRequest> contactDetails) {
            Utils.checkNotNull(contactDetails, "contactDetails");
            this.contactDetails = contactDetails;
            return this;
        }


        public Builder metadata(Map<String, String> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = JsonNullable.of(metadata);
            return this;
        }

        public Builder metadata(JsonNullable<? extends Map<String, String>> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = metadata;
            return this;
        }


        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        public V3CreatePaymentServiceUserRequest build() {

            return new V3CreatePaymentServiceUserRequest(
                address, bankAccountIDs, contactDetails,
                metadata, name);
        }

    }
}
